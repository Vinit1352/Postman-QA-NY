{
  "info": {
    "_postman_id": "6f1ff6b4-dfa4-482d-a88a-3080fa71b78a",
    "name": "NY InterCity RoundTrip manual Flow",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "updatedAt": "2025-01-16T16:34:40.000Z",
    "createdAt": "2024-12-24T07:38:24.000Z",
    "lastUpdatedBy": "34437282",
    "uid": "38579165-6f1ff6b4-dfa4-482d-a88a-3080fa71b78a"
  },
  "item": [
    {
      "name": "NY RoundTrip RidefFlow All API",
      "item": [
        {
          "name": "Drivernumber",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "f7927064-0106-498d-aa0c-b6c13c8d8fb2",
                "exec": [
                  "pm.collectionVariables.set(\"driver_number\", 9603578766)",
                  "pm.collectionVariables.set(\"rideStarted\", false)"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "1c141ad2-adb1-488b-b99f-a109b9065552",
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"rider_authId\", responseBody.authId);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "id": "3f1f7b8a-8cd1-4220-beb3-b1cab868441a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-3f1f7b8a-8cd1-4220-beb3-b1cab868441a"
        },
        {
          "name": "DriverOTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// var response = JSON.parse(responseBody);",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "",
                  "pm.collectionVariables.set(\"rider_token\", responseBody.token);",
                  "pm.collectionVariables.set(\"driver_id\", responseBody.person.id)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "bfa95d36-eb6d-4c7a-aecc-2db64e30c90f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},1000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "92913318-ae6e-4c05-9127-586c353f2f3c"
              }
            }
          ],
          "id": "7fa892da-6bd3-4201-83ba-89143aad28b4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"5481873d-10ca-42f3-8a32-22de4c916026\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "fee672cc-8c09-4062-b22c-4478eab37864",
                  "key": "authId",
                  "value": "{{rider_authId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-7fa892da-6bd3-4201-83ba-89143aad28b4"
        },
        {
          "name": "Driverlocation",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "id": "db47053a-a999-4abc-856c-709b583a3127",
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "setTimeout(function(){},2000)",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "test",
              "script": {
                "id": "5ee42c49-fd62-4022-9580-600380854449",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "id": "71288f46-81e8-41ef-8f07-23a241504031",
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {},
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Typevi",
                "value": "application/json;charset=utf-8",
                "type": "text",
                "disabled": true
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "vt",
                "value": "SEDAN",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n             \"lat\": 12.942245080720754,\n             \"lon\": 77.62223730729022\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-71288f46-81e8-41ef-8f07-23a241504031"
        },
        {
          "name": "Driversetactivity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "f74130d1-f0bd-4452-b9d9-fd7bc3999592"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "1e98bd79-9985-4fc4-9b83-568ce606b9cd"
              }
            }
          ],
          "id": "1a5e9968-ff32-4988-a09a-8e0557ed18e7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "setActivity"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                },
                {
                  "key": "mode",
                  "value": "\"ONLINE\""
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-1a5e9968-ff32-4988-a09a-8e0557ed18e7"
        },
        {
          "name": "Driverprofile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var obj = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"vehicleVariant\",obj.linkedVehicle.variant)",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "5c519312-8b63-4251-9806-3eed7dc679d6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "0b3202e5-7de8-456e-bf8b-80201b505c65"
              }
            }
          ],
          "id": "151fed4a-c197-49cf-9d44-c7b32ac84222",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/profile",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "profile"
              ]
            }
          },
          "response": [],
          "uid": "38579165-151fed4a-c197-49cf-9d44-c7b32ac84222"
        },
        {
          "name": "Usernumber",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1ba1ce69-dca6-46b0-993b-8ee1a6ed8a86",
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"user_authIdId\", responseBody.authId);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "74832ebc-f773-426e-9b0d-36c1166ce0e2",
                "exec": [
                  "pm.collectionVariables.set(\"user_number\", 9520146678)",
                  "",
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "id": "cf4556d3-0a2c-4e27-9f5e-fc0944353984",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\" : \"{{user_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\"\n}\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-cf4556d3-0a2c-4e27-9f5e-fc0944353984"
        },
        {
          "name": "UserOtp",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Token is not null\", function() {",
                  "    pm.expect(responseBody.token).to.be.not.eql(null)",
                  "})",
                  "",
                  "",
                  "",
                  "pm.collectionVariables.set(\"curr_user_token\", responseBody.token);"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "cba1252e-6fc2-41d7-a95e-01256a7aa350"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "37d2d23a-e517-46ab-99ec-993049770fd9"
              }
            }
          ],
          "id": "054c5e09-7506-47ec-8af8-d403316da85d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_userr_authId}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"9962w5dc-99a0-4306-b90d-2345f3787822\" \n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth/:authId/verify",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "f4997813-6c3b-460e-bac8-be1729bcadf5",
                  "key": "authId",
                  "value": "{{user_authIdId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-054c5e09-7506-47ec-8af8-d403316da85d"
        },
        {
          "name": "RideSearch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  " pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"curr_searchId\", responseBody.searchId);",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "40f800e3-620f-46b2-a971-7373f53beb15"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)",
                  "",
                  "var moment = require('moment');",
                  "var currentTime = moment.utc();",
                  "var newTime = currentTime.add(1, 'minutes');",
                  "var newcurrentTime = moment.utc();",
                  "",
                  "var returnTime = newcurrentTime.add(1440, 'minutes');",
                  "pm.globals.set(\"current_time_plus_one_minute\", newTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "pm.globals.set(\"current_time_plus_one_day\", returnTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "736fe8bf-dddf-4a2f-b4c1-e0b1679e2906"
              }
            }
          ],
          "id": "90fe15fc-3540-4b7a-ae27-0ac7da4ef19b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": " {\n     \"fareProductType\": \"INTER_CITY\",\n     \"contents\": {\n         \"roundTrip\": true,\n         \"returnTime\": \"{{current_time_plus_one_day}}\",\n         \"startTime\": \"{{current_time_plus_one_minute}}\",\n         \"origin\": {\n             \"address\": {\n                 \"area\": \"8th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Buildings\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.942245080720754,\n                 \"lon\": 77.62223730729022\n             }\n         },\n         \"autoAssignEnabledV2\": true,\n         \"autoAssignEnabled\": true,\n         \"destination\": {\n             \"address\": {\n                 \"area\": \"6th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Apartments\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.30571815808442,\n                 \"lon\": 76.65239202898034\n             }\n         },\n         \"stops\": [\n             {\n                 \"address\": {\n                     \"area\": \"6th Block Koramangala\",\n                     \"areaCode\": \"560047\",\n                     \"building\": \"Juspay Apartments\",\n                     \"city\": \"Bangalore\",\n                     \"country\": \"India\",\n                     \"door\": \"#444\",\n                     \"street\": \"18th Main\",\n                     \"state\": \"Karnataka\"\n                 },\n                 \"gps\": {\n                     \"lat\": 12.30571815808442,\n                     \"lon\": 76.65239202898034\n                }\n             }\n         ]\n     }\n }\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch"
              ]
            }
          },
          "response": [],
          "uid": "38579165-90fe15fc-3540-4b7a-ae27-0ac7da4ef19b"
        },
        {
          "name": "SearchIdResults",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var incomingQuotes = jsonData.quotes;",
                  "var maxRetries = 3; // Maximum number of retries",
                  "",
                  "// Initialize or increment the retry count",
                  "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
                  "",
                  "if (incomingQuotes && incomingQuotes.length > 0) {",
                  "    var quotesLen = incomingQuotes.length;",
                  "    for (var i = 0; i < quotesLen; i++) {",
                  "        if (incomingQuotes[i].onDemandCab.agencyName === \"Namma Yatri\" && incomingQuotes[i].onDemandCab.serviceTierName === \"Sedan\") {",
                  "            pm.collectionVariables.set(\"EstiSedan\", incomingQuotes[i].onDemandCab.id);",
                  "            console.log(incomingQuotes[i].onDemandCab.id + \" SedanEstimateId\");",
                  "            break; // Exit the loop after finding the first match",
                  "        }",
                  "    }",
                  "    // Reset retry count if quotes are found",
                  "    pm.collectionVariables.set(\"retryCount\", 0);",
                  "} else {",
                  "    // Increment retry count if quotes are empty",
                  "    retryCount++;",
                  "    pm.collectionVariables.set(\"retryCount\", retryCount);",
                  "",
                  "    if (retryCount < maxRetries) {",
                  "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
                  "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
                  "    } else {",
                  "        console.log(`Max retries reached (${maxRetries}).`);",
                  "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
                  "    }",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request);",
                  "    console.log('res', responseBody);",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "0145e524-0e1a-43c9-a98e-37a0798cf951"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},5000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "a6fb5afe-1f2d-49d8-8060-7cd3fd24b67b"
              }
            }
          ],
          "id": "f3d6ca88-a8bf-4618-a791-cc154ddd6315",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{curr_user_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                ":searchId",
                "results"
              ],
              "variable": [
                {
                  "id": "66ca0ed4-15a1-46bf-b0b2-2921a952b1c0",
                  "key": "searchId",
                  "value": "{{curr_searchId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-f3d6ca88-a8bf-4618-a791-cc154ddd6315"
        },
        {
          "name": "/rideSearch/quotes/:quoteId/confirm",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const body = JSON.parse(responseBody);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"boookingId\",body.bookingId);",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "20b5a0b2-6513-4171-88ab-abe5f2db1afe"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "73060677-898c-4223-9460-ffcc9806c0c3"
              }
            }
          ],
          "id": "4d87dcfa-5bac-4569-bc90-de92074995d2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/quotes/:quoteId/confirm",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                "quotes",
                ":quoteId",
                "confirm"
              ],
              "variable": [
                {
                  "id": "2d771a3c-23f1-45fa-a58e-be10d0ca4812",
                  "key": "quoteId",
                  "value": "{{EstiSedan}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-4d87dcfa-5bac-4569-bc90-de92074995d2"
        },
        {
          "name": "nearbyRideRequest",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json();",
                  "var nearbyRequest = responseBody.searchRequestsForDriver;",
                  "var maxRetries = 3; // Maximum number of retries",
                  "",
                  "// Initialize or increment the retry count",
                  "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
                  "",
                  "if (nearbyRequest && nearbyRequest.length > 0) {",
                  "    // Set the searchReq_Id collection variable",
                  "    pm.collectionVariables.set(\"searchReq_Id\", nearbyRequest[0].searchRequestId);",
                  "    console.log(nearbyRequest[0].searchRequestId + \" searchRequestId\");",
                  "",
                  "    // Reset the retry count as the request was successful",
                  "    pm.collectionVariables.set(\"retryCount\", 0);",
                  "} else {",
                  "    // Increment the retry count",
                  "    retryCount++;",
                  "    pm.collectionVariables.set(\"retryCount\", retryCount);",
                  "",
                  "    if (retryCount < maxRetries) {",
                  "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
                  "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
                  "    } else {",
                  "        console.log(`Max retries reached (${maxRetries}).`);",
                  "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
                  "    }",
                  "}",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', pm.info.requestName);",
                  "    console.log('res', responseBody);",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "b959d055-a9a9-4ab8-a119-b6caf17a5bd7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  " setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "4ae6eed3-bfc3-43b6-9a1e-5c24d0e5ba8a"
              }
            }
          ],
          "id": "d28271b8-dd99-4a29-96f7-3ca3d19f31e8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-d28271b8-dd99-4a29-96f7-3ca3d19f31e8"
        },
        {
          "name": "quoteOffer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "console.log(pm.collectionVariables.get(\"searchReq_Id\"))",
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "1e85783b-e568-413a-b4aa-c2b659c533f3"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "a4ec6307-b098-4d09-9bd4-00ab13b3962a"
              }
            }
          ],
          "id": "a015da07-bc29-4342-9966-7a92f1d58d0f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"searchRequestId\":\"{{searchReq_Id}}\"\n  //\"offeredFare\": 0\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "searchRequest",
                "quote",
                "offer"
              ]
            }
          },
          "response": [],
          "uid": "38579165-a015da07-bc29-4342-9966-7a92f1d58d0f"
        },
        {
          "name": "driverRideList",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"DriverRide_id\", jsonData.list[0].id);",
                  "console.log(pm.environment.get(\"DriverRide_id\"));",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "5a9bfc84-518a-43ac-9c70-24386c288af1"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "3f031674-8381-4365-9672-9e41104ddc0a"
              }
            }
          ],
          "id": "6dbf3d99-ef1d-4b76-bf7b-4727efaeb770",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=30&onlyActive=true",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "ride",
                "list"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "30"
                },
                {
                  "key": "onlyActive",
                  "value": "true"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-6dbf3d99-ef1d-4b76-bf7b-4727efaeb770"
        },
        {
          "name": "UserBookingList",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "18b70c7c-20bf-4c44-8759-f2e05eaa2247",
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "let rideStarted= pm.collectionVariables.get(\"rideStarted\")",
                  "if(rideStarted === true)",
                  "{",
                  "    pm.collectionVariables.set(\"intercityEndRideOtp\",jsonData.list[0].rideList[0].endOtp)",
                  "    postman.setNextRequest(\"EndRide\")",
                  "}",
                  "else",
                  "{",
                  "pm.collectionVariables.set(\"startOtp\", jsonData.list[0].rideList[0].rideOtp);",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "544db452-a994-4d33-bf92-f1e05b9d866c",
                "exec": [
                  "setTimeout(function(){},2000)",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "id": "656e64a6-1f8f-4d5a-8335-a2bc2c1b9bc2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl_app}}/rideBooking/list?limit=5&onlyActive=true",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideBooking",
                "list"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "5"
                },
                {
                  "key": "onlyActive",
                  "value": "true"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-656e64a6-1f8f-4d5a-8335-a2bc2c1b9bc2"
        },
        {
          "name": "startRide",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "d073f3f4-ba90-4e1b-842e-91677c470813"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  "pm.collectionVariables.set(\"rideStarted\", true)",
                  "postman.setNextRequest(\"UserBookingList\")",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "c81d5ca0-b38a-4208-897e-cc2c2c789be5"
              }
            }
          ],
          "id": "eed5a925-6bb1-40b0-b18d-d051b6d97946",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rideOtp\": \"{{startOtp}}\",\n    \"point\": {\n        \"lat\": 12.933672101248696,\n                \"lon\": 77.63034626469442\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/start",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "ride",
                ":rideId",
                "start"
              ],
              "variable": [
                {
                  "id": "a4034b74-74e0-4548-847a-0ffdbdbf40c4",
                  "key": "rideId",
                  "value": "{{DriverRide_id}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-eed5a925-6bb1-40b0-b18d-d051b6d97946"
        },
        {
          "name": "EndRide",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "3cd9bd50-a5b1-4181-bd74-9e9b7ae1823c"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "a21f562d-4d85-4248-8458-9cf61639fd90"
              }
            }
          ],
          "id": "61adbbf3-026a-4b96-a32d-56111ab69d5f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "\n{\n    \"rideOtp\": \"{{intercityEndRideOtp}}\",\n    \"point\": {\n                \"lat\": 12.30571815808442,\n                \"lon\": 76.65239202898034\n            }\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/end",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "ride",
                ":rideId",
                "end"
              ],
              "variable": [
                {
                  "id": "803fa21a-d0a7-4c1f-9755-3cfebffe852c",
                  "key": "rideId",
                  "value": "{{DriverRide_id}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-61adbbf3-026a-4b96-a32d-56111ab69d5f"
        }
      ],
      "id": "e26f3a15-7ebf-49c4-b0eb-e63d31cd3b6a",
      "uid": "38579165-e26f3a15-7ebf-49c4-b0eb-e63d31cd3b6a"
    },
    {
      "name": "NY RoundTrip user Cancellation All API",
      "item": [
        {
          "name": "Drivernumber",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"driver_number\", 6378299817)",
                  "pm.collectionVariables.set(\"rideStarted\", false)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "1d9d8aef-1847-418d-950d-602e3e94208c"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"rider_authId\", responseBody.authId);"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "31d54c1e-c1ff-4429-979f-e750ba1bcedd"
              }
            }
          ],
          "id": "b4389f64-cb0d-4911-83f3-10994cfb7169",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-b4389f64-cb0d-4911-83f3-10994cfb7169"
        },
        {
          "name": "DriverOTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// var response = JSON.parse(responseBody);",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "",
                  "pm.collectionVariables.set(\"rider_token\", responseBody.token);",
                  "pm.collectionVariables.set(\"driver_id\", responseBody.person.id)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "1e6468c3-ea28-442f-b42a-1b15dea713dc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},1000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "bbc733df-db92-4624-8c8f-73d463342fa5"
              }
            }
          ],
          "id": "9d5d072a-81a1-4967-8a18-af736fdd10e0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"5481873d-10ca-42f3-8a32-22de4c916026\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "e09cd54b-c019-425c-b5e2-5992063a2e9c",
                  "key": "authId",
                  "value": "{{rider_authId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-9d5d072a-81a1-4967-8a18-af736fdd10e0"
        },
        {
          "name": "Driverlocation",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "setTimeout(function(){},2000)",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "acd48142-c24b-4473-b8dc-9521921021fc"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "9ea00b46-9454-4ab9-a989-fa4f19c34d50"
              }
            }
          ],
          "id": "0b2230dc-c968-4406-96b7-ff1ae6c87c1e",
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {},
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Typevi",
                "value": "application/json;charset=utf-8",
                "type": "text",
                "disabled": true
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "vt",
                "value": "HATCHBACK",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n             \"lat\": 12.942245080720754,\n             \"lon\": 77.62223730729022\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-0b2230dc-c968-4406-96b7-ff1ae6c87c1e"
        },
        {
          "name": "Driversetactivity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "9ad027c4-bbc6-4b13-be02-33f63ab56ee2"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "d9434874-16f6-4048-acc0-ac19a56a2bb3"
              }
            }
          ],
          "id": "ddb08a7c-9cae-4d7c-8f4b-2e5170ebd36c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "setActivity"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                },
                {
                  "key": "mode",
                  "value": "\"ONLINE\""
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-ddb08a7c-9cae-4d7c-8f4b-2e5170ebd36c"
        },
        {
          "name": "Driverprofile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var obj = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"vehicleVariant\",obj.linkedVehicle.variant)",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "485ead0f-3996-4b11-8113-1a1275bcd56e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "7b773aee-5a4e-422f-b363-3623efc803af"
              }
            }
          ],
          "id": "2d13b4ac-9c4c-4528-acc8-c48ffb23cc3f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/profile",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "profile"
              ]
            }
          },
          "response": [],
          "uid": "38579165-2d13b4ac-9c4c-4528-acc8-c48ffb23cc3f"
        },
        {
          "name": "Usernumber",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"user_authIdId\", responseBody.authId);"
                ],
                "type": "text/javascript",
                "id": "559c4652-1b26-4259-b913-c2ea3bd7e20c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"user_number\", 9280126745)",
                  "",
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "id": "699daac5-b99d-458d-ac1a-005c079333fc"
              }
            }
          ],
          "id": "bf00f1fc-baf0-4540-94c8-65e511efc9c2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\" : \"{{user_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\"\n}\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-bf00f1fc-baf0-4540-94c8-65e511efc9c2"
        },
        {
          "name": "UserOtp",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Token is not null\", function() {",
                  "    pm.expect(responseBody.token).to.be.not.eql(null)",
                  "})",
                  "",
                  "",
                  "",
                  "pm.collectionVariables.set(\"curr_user_token\", responseBody.token);"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "88caff25-ac61-45ec-83e4-8dda86ca25ed"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "2da12e8c-d40a-41ed-862f-3e724f66aa0b"
              }
            }
          ],
          "id": "f26cf0be-f9f1-4dd1-b578-b1cc58cda108",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_userr_authId}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"9962w5dc-99a0-4306-b90d-2345f3787822\" \n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth/:authId/verify",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "709d1176-f320-48d8-b7f8-0c56657f07e2",
                  "key": "authId",
                  "value": "{{user_authIdId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-f26cf0be-f9f1-4dd1-b578-b1cc58cda108"
        },
        {
          "name": "RideSearch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  " pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"curr_searchId\", responseBody.searchId);",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "417d208a-6784-43db-9e42-7776584d917f"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)",
                  "",
                  "var moment = require('moment');",
                  "var currentTime = moment.utc();",
                  "var newTime = currentTime.add(1, 'minutes');",
                  "var newcurrentTime = moment.utc();",
                  "",
                  "var returnTime = newcurrentTime.add(1440, 'minutes');",
                  "pm.globals.set(\"current_time_plus_one_minute\", newTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "pm.globals.set(\"current_time_plus_one_day\", returnTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "3d4aac45-4c17-43c7-a3f3-45cc720f4996"
              }
            }
          ],
          "id": "f4da89ea-5197-4ebb-9138-81509f06e294",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": " {\n     \"fareProductType\": \"INTER_CITY\",\n     \"contents\": {\n         \"roundTrip\": true,\n         \"returnTime\": \"{{current_time_plus_one_day}}\",\n         \"startTime\": \"{{current_time_plus_one_minute}}\",\n         \"origin\": {\n             \"address\": {\n                 \"area\": \"8th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Buildings\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.942245080720754,\n                 \"lon\": 77.62223730729022\n             }\n         },\n         \"autoAssignEnabledV2\": true,\n         \"autoAssignEnabled\": true,\n         \"destination\": {\n             \"address\": {\n                 \"area\": \"6th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Apartments\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.30571815808442,\n                 \"lon\": 76.65239202898034\n             }\n         },\n         \"stops\": [\n             {\n                 \"address\": {\n                     \"area\": \"6th Block Koramangala\",\n                     \"areaCode\": \"560047\",\n                     \"building\": \"Juspay Apartments\",\n                     \"city\": \"Bangalore\",\n                     \"country\": \"India\",\n                     \"door\": \"#444\",\n                     \"street\": \"18th Main\",\n                     \"state\": \"Karnataka\"\n                 },\n                 \"gps\": {\n                     \"lat\": 12.30571815808442,\n                     \"lon\": 76.65239202898034\n                }\n             }\n         ]\n     }\n }\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch"
              ]
            }
          },
          "response": [],
          "uid": "38579165-f4da89ea-5197-4ebb-9138-81509f06e294"
        },
        {
          "name": "SearchIdResults",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var incomingQuotes = jsonData.quotes;",
                  "var maxRetries = 3; // Maximum number of retries",
                  "",
                  "// Initialize or increment the retry count",
                  "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
                  "",
                  "if (incomingQuotes && incomingQuotes.length > 0) {",
                  "    var quotesLen = incomingQuotes.length;",
                  "    for (var i = 0; i < quotesLen; i++) {",
                  "        if (incomingQuotes[i].onDemandCab.agencyName === \"Namma Yatri\" && incomingQuotes[i].onDemandCab.serviceTierName === \"Sedan\") {",
                  "            pm.collectionVariables.set(\"EstiSedan\", incomingQuotes[i].onDemandCab.id);",
                  "            console.log(incomingQuotes[i].onDemandCab.id + \" SedanEstimateId\");",
                  "            break; // Exit the loop after finding the first match",
                  "        }",
                  "    }",
                  "    // Reset retry count if quotes are found",
                  "    pm.collectionVariables.set(\"retryCount\", 0);",
                  "} else {",
                  "    // Increment retry count if quotes are empty",
                  "    retryCount++;",
                  "    pm.collectionVariables.set(\"retryCount\", retryCount);",
                  "",
                  "    if (retryCount < maxRetries) {",
                  "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
                  "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
                  "    } else {",
                  "        console.log(`Max retries reached (${maxRetries}).`);",
                  "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
                  "    }",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request);",
                  "    console.log('res', responseBody);",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "df4c587f-1905-4b95-abe7-1ab36461eb0a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "7ab61503-f70e-4e7a-a285-7728a91ffd06"
              }
            }
          ],
          "id": "a5f2ec15-588e-4b03-874b-83268c2d9582",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{curr_user_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                ":searchId",
                "results"
              ],
              "variable": [
                {
                  "id": "d7e4b56a-ca67-430c-bfec-f20661a2a04d",
                  "key": "searchId",
                  "value": "{{curr_searchId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-a5f2ec15-588e-4b03-874b-83268c2d9582"
        },
        {
          "name": "/rideSearch/quotes/:quoteId/confirm",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const body = JSON.parse(responseBody);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"boookingId\",body.bookingId);",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "a19e6248-2333-4af2-8541-4cafb0ebd469"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "a0df0535-84f2-4745-ab11-4b1760afeb3e"
              }
            }
          ],
          "id": "0aff9d8e-502e-46b4-a97c-32a2e42bbbf8",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/quotes/:quoteId/confirm",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                "quotes",
                ":quoteId",
                "confirm"
              ],
              "variable": [
                {
                  "id": "b3fddc44-a0be-46e1-9d6f-f7949aaa4417",
                  "key": "quoteId",
                  "value": "{{EstiSedan}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-0aff9d8e-502e-46b4-a97c-32a2e42bbbf8"
        },
        {
          "name": "nearbyRideRequest",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json();",
                  "var nearbyRequest = responseBody.searchRequestsForDriver;",
                  "var maxRetries = 4; // Maximum number of retries",
                  "",
                  "// Initialize or increment the retry count",
                  "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
                  "",
                  "if (nearbyRequest && nearbyRequest.length > 0) {",
                  "    // Set the searchReq_Id collection variable",
                  "    pm.collectionVariables.set(\"searchReq_Id\", nearbyRequest[0].searchRequestId);",
                  "    console.log(nearbyRequest[0].searchRequestId + \" searchRequestId\");",
                  "",
                  "    // Reset the retry count as the request was successful",
                  "    pm.collectionVariables.set(\"retryCount\", 0);",
                  "} else {",
                  "    // Increment the retry count",
                  "    retryCount++;",
                  "    pm.collectionVariables.set(\"retryCount\", retryCount);",
                  "",
                  "    if (retryCount < maxRetries) {",
                  "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
                  "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
                  "    } else {",
                  "        console.log(`Max retries reached (${maxRetries}).`);",
                  "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
                  "    }",
                  "}",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', pm.info.requestName);",
                  "    console.log('res', responseBody);",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "id": "bd62deb0-67fe-40a2-ad21-4846130c3ea6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  " setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "id": "e3773d03-d20b-4b77-a31b-ccc0c7f74765"
              }
            }
          ],
          "id": "4a55cb5d-9014-4e85-82ea-6f72fa7f07e0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-4a55cb5d-9014-4e85-82ea-6f72fa7f07e0"
        },
        {
          "name": "quoteOffer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "console.log(pm.collectionVariables.get(\"searchReq_Id\"))",
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "a5ec4adb-c2a1-466d-a11c-728d8ff0bf43"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "98703dcc-76cd-4e8e-bed6-455f4b4c8aa5"
              }
            }
          ],
          "id": "93ae021f-aca1-4a48-be88-bd0ae0ab9581",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"searchRequestId\":\"{{searchReq_Id}}\"\n  //\"offeredFare\": 0\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "searchRequest",
                "quote",
                "offer"
              ]
            }
          },
          "response": [],
          "uid": "38579165-93ae021f-aca1-4a48-be88-bd0ae0ab9581"
        },
        {
          "name": "driverRideList",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"DriverRide_id\", jsonData.list[0].id);"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "12f076e7-eaea-4fa0-ad14-2abca643a946"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "0f3be1aa-591b-426e-9912-f514f9d1e2ab"
              }
            }
          ],
          "id": "8a0c4d32-5962-45ab-924f-88c8384dc11f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=30&onlyActive=true",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "ride",
                "list"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "30"
                },
                {
                  "key": "onlyActive",
                  "value": "true"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-8a0c4d32-5962-45ab-924f-88c8384dc11f"
        },
        {
          "name": "UserBookingList",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "let rideStarted= pm.collectionVariables.get(\"rideStarted\")",
                  "if(rideStarted === true)",
                  "{",
                  "    pm.collectionVariables.set(\"intercityEndRideOtp\",jsonData.list[0].rideList[0].endOtp)",
                  "    postman.setNextRequest(\"EndRide\")",
                  "}",
                  "else",
                  "{",
                  "//pm.collectionVariables.set(\"startOtp\", jsonData.list[0].rideList[0].rideOtp);",
                  "}",
                  "",
                  "pm.collectionVariables.set(\"booking_id\",jsonData.list[0].id);",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "5177a009-76c7-4c93-af69-9be91e4bdeb6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "17d0b208-4653-4315-be94-4c309992826a"
              }
            }
          ],
          "id": "8a5e95fb-8a44-42ed-abd6-4efb6ba3eca0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl_app}}/rideBooking/list?limit=20&onlyActive=true",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideBooking",
                "list"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "onlyActive",
                  "value": "true"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-8a5e95fb-8a44-42ed-abd6-4efb6ba3eca0"
        },
        {
          "name": "rideBooking/:bookingId/cancel",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "774ef06f-c7ec-4c12-ae08-4e4e75126795"
              }
            }
          ],
          "id": "78e85f2d-c48c-4cd8-8274-b09c99691b6c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "token",
                "value": "1aca4c88-6e6a-4b74-ad53-e296088ab076"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"additionalInfo\": \"By Mistake\",\n    \"reasonCode\": \"By Mistake By Mistake\",\n    \"reasonStage\": \"OnSearch\"\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/rideBooking/:bookingId/cancel",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideBooking",
                ":bookingId",
                "cancel"
              ],
              "variable": [
                {
                  "id": "77fc1d25-db61-48f4-ab78-85be5d0b45c4",
                  "key": "bookingId",
                  "value": "{{booking_id}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-78e85f2d-c48c-4cd8-8274-b09c99691b6c"
        }
      ],
      "id": "4ea29f8b-8912-43f9-81ba-fbab94d4f141",
      "uid": "38579165-4ea29f8b-8912-43f9-81ba-fbab94d4f141"
    },
    {
      "name": "NY RoundTrip driver Cancellation All API",
      "item": [
        {
          "name": "Drivernumber",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"driver_number\", 6378299817)",
                  "pm.collectionVariables.set(\"rideStarted\", false)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "36123d91-fb5a-44c9-a449-02147ee69e93"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"rider_authId\", responseBody.authId);"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "53bfc3dd-fb5a-4b75-92e6-13d1cfcdfbf8"
              }
            }
          ],
          "id": "ca4cd260-8c7d-4207-a8e9-09e1bd5776fe",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-ca4cd260-8c7d-4207-a8e9-09e1bd5776fe"
        },
        {
          "name": "DriverOTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// var response = JSON.parse(responseBody);",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "",
                  "pm.collectionVariables.set(\"rider_token\", responseBody.token);",
                  "pm.collectionVariables.set(\"driver_id\", responseBody.person.id)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "eba62bd8-eb04-4eb5-8bfa-2220a89c06e1"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},1000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "423426ff-3deb-4710-838b-6144c8d23996"
              }
            }
          ],
          "id": "15baf15a-415e-4f63-97bd-7cfe4e4d30ce",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"5481873d-10ca-42f3-8a32-22de4c916026\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "ac0e6b36-001d-45cd-93e9-a65a388c76de",
                  "key": "authId",
                  "value": "{{rider_authId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-15baf15a-415e-4f63-97bd-7cfe4e4d30ce"
        },
        {
          "name": "Driverlocation",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "setTimeout(function(){},2000)",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "1fc64141-d833-488a-acb1-72bf0f7037b9"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "8c7dadd9-ef0d-423a-95ec-e3ce0f395350"
              }
            }
          ],
          "id": "e077eba0-bf6f-4080-8f21-011276a59a2e",
          "protocolProfileBehavior": {
            "disabledSystemHeaders": {},
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Typevi",
                "value": "application/json;charset=utf-8",
                "type": "text",
                "disabled": true
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "vt",
                "value": "HATCHBACK",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n             \"lat\": 12.942245080720754,\n             \"lon\": 77.62223730729022\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-e077eba0-bf6f-4080-8f21-011276a59a2e"
        },
        {
          "name": "Driversetactivity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "c2db5451-aeea-4dd6-bbd0-bb78a842dadb"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "c261c8cb-62ae-4556-9315-06884b5829a8"
              }
            }
          ],
          "id": "8db18b16-64d7-46c7-9401-e1b15e886371",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "setActivity"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                },
                {
                  "key": "mode",
                  "value": "\"ONLINE\""
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-8db18b16-64d7-46c7-9401-e1b15e886371"
        },
        {
          "name": "Driverprofile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var obj = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"vehicleVariant\",obj.linkedVehicle.variant)",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "bd4ddf9c-0e37-47c9-b731-51833e88ac4c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "fa387f69-0fb3-4fe7-82f6-3a6ee16d4b9d"
              }
            }
          ],
          "id": "ec6ee3c7-6960-4b4b-894e-8652ede633ba",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/profile",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "profile"
              ]
            }
          },
          "response": [],
          "uid": "38579165-ec6ee3c7-6960-4b4b-894e-8652ede633ba"
        },
        {
          "name": "Usernumber",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"user_authIdId\", responseBody.authId);"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "0e2067e7-4389-4b98-83ef-1d4bf944a4fe"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.collectionVariables.set(\"user_number\", 8110126785)",
                  "",
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "d7d6d2a3-cce2-4a07-b4df-4665ee0cafa6"
              }
            }
          ],
          "id": "e6c23dab-89dc-467e-8f67-a6394ab92f51",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\" : \"{{user_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\"\n}\n\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-e6c23dab-89dc-467e-8f67-a6394ab92f51"
        },
        {
          "name": "UserOtp",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Token is not null\", function() {",
                  "    pm.expect(responseBody.token).to.be.not.eql(null)",
                  "})",
                  "",
                  "",
                  "",
                  "pm.collectionVariables.set(\"curr_user_token\", responseBody.token);"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "89a33ee5-99e3-4496-a5ce-a9cb43f352bd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "fdb493ce-75cc-4ee4-99d0-a62baba121c1"
              }
            }
          ],
          "id": "fcad9a32-4d81-4595-907c-bd777c26448b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_userr_authId}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"9962w5dc-99a0-4306-b90d-2345f3787822\" \n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth/:authId/verify",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "baa10001-17fa-45b7-9da7-e95dbcc695ee",
                  "key": "authId",
                  "value": "{{user_authIdId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-fcad9a32-4d81-4595-907c-bd777c26448b"
        },
        {
          "name": "RideSearch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json()",
                  " pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"curr_searchId\", responseBody.searchId);",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "27eb4a06-1698-4e8b-b660-ac98329e8fd3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)",
                  "",
                  "var moment = require('moment');",
                  "var currentTime = moment.utc();",
                  "var newTime = currentTime.add(1, 'minutes');",
                  "var newcurrentTime = moment.utc();",
                  "",
                  "var returnTime = newcurrentTime.add(1440, 'minutes');",
                  "pm.globals.set(\"current_time_plus_one_minute\", newTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "pm.globals.set(\"current_time_plus_one_day\", returnTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "49401ca0-67b5-4958-b631-739f26b21ba4"
              }
            }
          ],
          "id": "4b3df729-6c05-4d59-8118-4c9274177822",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": " {\n     \"fareProductType\": \"INTER_CITY\",\n     \"contents\": {\n         \"roundTrip\": true,\n         \"returnTime\": \"{{current_time_plus_one_day}}\",\n         \"startTime\": \"{{current_time_plus_one_minute}}\",\n         \"origin\": {\n             \"address\": {\n                 \"area\": \"8th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Buildings\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.942245080720754,\n                 \"lon\": 77.62223730729022\n             }\n         },\n         \"autoAssignEnabledV2\": true,\n         \"autoAssignEnabled\": true,\n         \"destination\": {\n             \"address\": {\n                 \"area\": \"6th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Apartments\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.30571815808442,\n                 \"lon\": 76.65239202898034\n             }\n         },\n         \"stops\": [\n             {\n                 \"address\": {\n                     \"area\": \"6th Block Koramangala\",\n                     \"areaCode\": \"560047\",\n                     \"building\": \"Juspay Apartments\",\n                     \"city\": \"Bangalore\",\n                     \"country\": \"India\",\n                     \"door\": \"#444\",\n                     \"street\": \"18th Main\",\n                     \"state\": \"Karnataka\"\n                 },\n                 \"gps\": {\n                     \"lat\": 12.30571815808442,\n                     \"lon\": 76.65239202898034\n                }\n             }\n         ]\n     }\n }\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch"
              ]
            }
          },
          "response": [],
          "uid": "38579165-4b3df729-6c05-4d59-8118-4c9274177822"
        },
        {
          "name": "SearchIdResults",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var incomingQuotes = jsonData.quotes;",
                  "var maxRetries = 3; // Maximum number of retries",
                  "",
                  "// Initialize or increment the retry count",
                  "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
                  "",
                  "if (incomingQuotes && incomingQuotes.length > 0) {",
                  "    var quotesLen = incomingQuotes.length;",
                  "    for (var i = 0; i < quotesLen; i++) {",
                  "        if (incomingQuotes[i].onDemandCab.agencyName === \"Namma Yatri\" && incomingQuotes[i].onDemandCab.serviceTierName === \"Sedan\") {",
                  "            pm.collectionVariables.set(\"EstiSedan\", incomingQuotes[i].onDemandCab.id);",
                  "            console.log(incomingQuotes[i].onDemandCab.id + \" SedanEstimateId\");",
                  "            break; // Exit the loop after finding the first match",
                  "        }",
                  "    }",
                  "    // Reset retry count if quotes are found",
                  "    pm.collectionVariables.set(\"retryCount\", 0);",
                  "} else {",
                  "    // Increment retry count if quotes are empty",
                  "    retryCount++;",
                  "    pm.collectionVariables.set(\"retryCount\", retryCount);",
                  "",
                  "    if (retryCount < maxRetries) {",
                  "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
                  "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
                  "    } else {",
                  "        console.log(`Max retries reached (${maxRetries}).`);",
                  "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
                  "    }",
                  "}",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request);",
                  "    console.log('res', responseBody);",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "99114af9-7b12-4d9b-b8b3-233eaa98e7e3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "e2eaf677-fd68-4f41-aee5-f5d0e70ae0d3"
              }
            }
          ],
          "id": "f1a0d7a3-4cea-41b0-aff3-6540f9b1e2ec",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{curr_user_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                ":searchId",
                "results"
              ],
              "variable": [
                {
                  "id": "336c345a-08e7-450d-b5f1-3004ad3e7a7c",
                  "key": "searchId",
                  "value": "{{curr_searchId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-f1a0d7a3-4cea-41b0-aff3-6540f9b1e2ec"
        },
        {
          "name": "/rideSearch/quotes/:quoteId/confirm",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const body = JSON.parse(responseBody);",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"boookingId\",body.bookingId);",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "d6b47fe9-95fd-48e1-803d-843c53ed63c7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "7cec59ac-d323-4098-a8ea-0a806de10458"
              }
            }
          ],
          "id": "4d4caf4e-fc37-494b-84b1-646c39fac65c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/quotes/:quoteId/confirm",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                "quotes",
                ":quoteId",
                "confirm"
              ],
              "variable": [
                {
                  "id": "8a3b2465-734c-46da-af8e-b2cdab34c86f",
                  "key": "quoteId",
                  "value": "{{EstiSedan}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-4d4caf4e-fc37-494b-84b1-646c39fac65c"
        },
        {
          "name": "nearbyRideRequest",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var responseBody = pm.response.json();",
                  "var nearbyRequest = responseBody.searchRequestsForDriver;",
                  "var maxRetries = 3; // Maximum number of retries",
                  "",
                  "// Initialize or increment the retry count",
                  "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
                  "",
                  "if (nearbyRequest && nearbyRequest.length > 0) {",
                  "    // Set the searchReq_Id collection variable",
                  "    pm.collectionVariables.set(\"searchReq_Id\", nearbyRequest[0].searchRequestId);",
                  "    console.log(nearbyRequest[0].searchRequestId + \" searchRequestId\");",
                  "",
                  "    // Reset the retry count as the request was successful",
                  "    pm.collectionVariables.set(\"retryCount\", 0);",
                  "} else {",
                  "    // Increment the retry count",
                  "    retryCount++;",
                  "    pm.collectionVariables.set(\"retryCount\", retryCount);",
                  "",
                  "    if (retryCount < maxRetries) {",
                  "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
                  "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
                  "    } else {",
                  "        console.log(`Max retries reached (${maxRetries}).`);",
                  "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
                  "    }",
                  "}",
                  "",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', pm.info.requestName);",
                  "    console.log('res', responseBody);",
                  "    pm.response.to.have.status(200);",
                  "});",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "dd9565c7-bb7d-431d-af13-552cbf744899"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  " setTimeout(function(){},3000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "fd5b8cf0-06ef-4bd0-8d23-719a7f2ae57e"
              }
            }
          ],
          "id": "ba67afbb-ab0c-42ef-af8a-aa7fe75d356b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-ba67afbb-ab0c-42ef-af8a-aa7fe75d356b"
        },
        {
          "name": "quoteOffer",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "console.log(pm.collectionVariables.get(\"searchReq_Id\"))",
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "15a0cbb9-f3ee-4fc1-a441-6b6ee7ad396d"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var responseBody = pm.response.json()",
                  "",
                  "pm.test(\"Result - Successful\", function() {",
                  "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
                  "})",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "cfde5cf0-9cf2-460a-8be7-2243e5ba52f3"
              }
            }
          ],
          "id": "927c1ae8-0cf1-40eb-a445-caf91c276ba6",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"searchRequestId\":\"{{searchReq_Id}}\"\n  //\"offeredFare\": 0\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "searchRequest",
                "quote",
                "offer"
              ]
            }
          },
          "response": [],
          "uid": "38579165-927c1ae8-0cf1-40eb-a445-caf91c276ba6"
        },
        {
          "name": "driverRideList",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.collectionVariables.set(\"DriverRide_id\", jsonData.list[0].id);",
                  "console.log(pm.environment.get(\"DriverRide_id\"));",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript",
                "id": "03bf8820-98b6-4d67-9aa2-981b686902b0"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "id": "f985d48d-b71c-4647-99ce-2b4e59472957"
              }
            }
          ],
          "id": "76b8eee0-0018-4145-90a2-1852fe604786",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=1&onlyActive=true",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "ride",
                "list"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "1"
                },
                {
                  "key": "onlyActive",
                  "value": "true"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-76b8eee0-0018-4145-90a2-1852fe604786"
        },
        {
          "name": "UserBookingList",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.test(\"Status code is 200\", function () {",
                  "     console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "let rideStarted= pm.collectionVariables.get(\"rideStarted\")",
                  "if(rideStarted === true)",
                  "{",
                  "    pm.collectionVariables.set(\"intercityEndRideOtp\",jsonData.list[0].rideList[0].endOtp)",
                  "    postman.setNextRequest(\"EndRide\")",
                  "}",
                  "else",
                  "{",
                  "pm.collectionVariables.set(\"startOtp\", jsonData.list[0].rideList[0].rideOtp);",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "f9446be3-efd3-4470-8ae4-0554c739d8ae"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "1637644f-a578-407d-b62a-09d4ca420670"
              }
            }
          ],
          "id": "40ba3135-740a-4569-9965-e3a9955fc365",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{curr_user_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl_app}}/rideBooking/list?limit=20&onlyActive=true",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideBooking",
                "list"
              ],
              "query": [
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "onlyActive",
                  "value": "true"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-40ba3135-740a-4569-9965-e3a9955fc365"
        },
        {
          "name": "/driver/ride/:rideid/cancel",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Validating whether the Status code is 200\", function () {",
                  "     console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {},
                "id": "b495e4c4-f1c5-4f0d-bdb8-d4c43ae9f49b"
              }
            }
          ],
          "id": "4598e327-a642-47d0-836d-6a117ecc74b1",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{rider_token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "token",
                "value": ""
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reasonCode\": \"aliquip\",\n    \"additionalInfo\": \"nostrud dolore dolor occaecat esse\"\n}"
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/cancel",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "ride",
                ":rideId",
                "cancel"
              ],
              "variable": [
                {
                  "id": "d0916bf0-3e65-4b4d-8c0d-524a96fa8915",
                  "key": "rideId",
                  "value": "{{DriverRide_id}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-4598e327-a642-47d0-836d-6a117ecc74b1"
        }
      ],
      "id": "4bec77b6-a6a3-4aea-9121-a2357a75539e",
      "uid": "38579165-4bec77b6-a6a3-4aea-9121-a2357a75539e"
    }
  ],
  "variable": [
    {
      "key": "driver_number",
      "value": ""
    },
    {
      "key": "rideStarted",
      "value": ""
    },
    {
      "key": "rider_authId",
      "value": ""
    },
    {
      "key": "rider_token",
      "value": ""
    },
    {
      "key": "driver_id",
      "value": ""
    },
    {
      "key": "vehicleVariant",
      "value": ""
    },
    {
      "key": "user_number",
      "value": ""
    },
    {
      "key": "user_authIdId",
      "value": ""
    },
    {
      "key": "curr_user_token",
      "value": ""
    },
    {
      "key": "curr_searchId",
      "value": ""
    },
    {
      "key": "EstiSedan",
      "value": ""
    },
    {
      "key": "retryCount",
      "value": ""
    },
    {
      "key": "boookingId",
      "value": ""
    },
    {
      "key": "searchReq_Id",
      "value": ""
    },
    {
      "key": "DriverRide_id",
      "value": ""
    },
    {
      "key": "startOtp",
      "value": ""
    }
  ]
}