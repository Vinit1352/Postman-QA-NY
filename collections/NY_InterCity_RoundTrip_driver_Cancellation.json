{
  "info": {
    "_postman_id": "88bd23b1-782d-4f6a-8cd0-42d98444aef7",
    "name": "NY InterCity RoundTrip driver Cancellation",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "updatedAt": "2025-01-16T16:31:12.000Z",
    "createdAt": "2024-12-24T07:38:24.000Z",
    "lastUpdatedBy": "34437282",
    "uid": "38579165-88bd23b1-782d-4f6a-8cd0-42d98444aef7"
  },
  "item": [
    {
      "name": "Drivernumber",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.collectionVariables.set(\"driver_number\", 6378299817)",
              "pm.collectionVariables.set(\"rideStarted\", false)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "f3668e93-5dd0-4a83-b720-5d4cfc08f1b8"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.collectionVariables.set(\"rider_authId\", responseBody.authId);"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "7dee6d40-74c7-4af1-9982-6411464b142e"
          }
        }
      ],
      "id": "9efa171e-d0fa-4eef-940a-462f5a5f410e",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-9efa171e-d0fa-4eef-940a-462f5a5f410e"
    },
    {
      "name": "DriverOTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// var response = JSON.parse(responseBody);",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "",
              "pm.collectionVariables.set(\"rider_token\", responseBody.token);",
              "pm.collectionVariables.set(\"driver_id\", responseBody.person.id)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "445165db-1681-401a-8582-83977770c440"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "1e9c9bb5-2f3a-4148-88f7-e37dcd78c03f"
          }
        }
      ],
      "id": "ec26344d-04da-497f-8d7b-a83c151b077f",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"5481873d-10ca-42f3-8a32-22de4c916026\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "id": "4aefe704-ff09-4cab-a08a-4424a104ee8c",
              "key": "authId",
              "value": "{{rider_authId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-ec26344d-04da-497f-8d7b-a83c151b077f"
    },
    {
      "name": "Driverlocation",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "var moment = require('moment');",
              "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
              "",
              "setTimeout(function(){},2000)",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "4dcca8d7-4893-4711-8887-410404a67385"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "8dde611f-cc66-4633-a372-163e05e4d691"
          }
        }
      ],
      "id": "61920efd-e1bc-496e-aa39-503ac86fc2ca",
      "protocolProfileBehavior": {
        "disabledSystemHeaders": {},
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Typevi",
            "value": "application/json;charset=utf-8",
            "type": "text",
            "disabled": true
          },
          {
            "key": "mId",
            "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
            "type": "text"
          },
          {
            "key": "vt",
            "value": "HATCHBACK",
            "type": "text"
          },
          {
            "key": "dm",
            "value": "ONLINE",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "[\n    {\n        \"pt\": {\n             \"lat\": 12.942245080720754,\n             \"lon\": 77.62223730729022\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]\n\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/location",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "location"
          ]
        }
      },
      "response": [],
      "uid": "38579165-61920efd-e1bc-496e-aa39-503ac86fc2ca"
    },
    {
      "name": "Driversetactivity",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "ec5f8593-ffeb-4c03-ba9c-a25ba5b1cac6"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "cdf48a72-0614-4ceb-9330-e1db2d7c76b6"
          }
        }
      ],
      "id": "a9d8a4e8-d109-4622-820b-b7a44325c6df",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "\n\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "setActivity"
          ],
          "query": [
            {
              "key": "active",
              "value": "true"
            },
            {
              "key": "mode",
              "value": "\"ONLINE\""
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-a9d8a4e8-d109-4622-820b-b7a44325c6df"
    },
    {
      "name": "Driverprofile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "var obj = JSON.parse(responseBody);",
              "pm.collectionVariables.set(\"vehicleVariant\",obj.linkedVehicle.variant)",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "3a642ec3-92ae-4c77-87a1-477ed40d51ba"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "2fa0727b-f5c0-418f-b734-3b191602a590"
          }
        }
      ],
      "id": "79a16158-9ec1-4aff-8125-2406066cc86e",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/profile",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "profile"
          ]
        }
      },
      "response": [],
      "uid": "38579165-79a16158-9ec1-4aff-8125-2406066cc86e"
    },
    {
      "name": "Usernumber",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.collectionVariables.set(\"user_authIdId\", responseBody.authId);"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "cf813c26-1841-48f8-b307-e6d64ce9b84b"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "pm.collectionVariables.set(\"user_number\", 9245776310)",
              "",
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "82592a0c-ecdb-457f-b832-f9c1644338c1"
          }
        }
      ],
      "id": "9d89e8eb-18c6-4b65-8ec0-9f296939c9a1",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\" : \"{{user_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\"\n}\n\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-9d89e8eb-18c6-4b65-8ec0-9f296939c9a1"
    },
    {
      "name": "UserOtp",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Token is not null\", function() {",
              "    pm.expect(responseBody.token).to.be.not.eql(null)",
              "})",
              "",
              "",
              "",
              "pm.collectionVariables.set(\"curr_user_token\", responseBody.token);"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "94bd47d3-854a-4c4e-b5e8-c15156871ad6"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "33b353f7-826b-46b9-b9ae-f6d92d9afc75"
          }
        }
      ],
      "id": "540be258-06cd-4531-a5af-c8020293f802",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_userr_authId}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"9962w5dc-99a0-4306-b90d-2345f3787822\" \n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth/:authId/verify",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "id": "5aab76ac-9707-4abb-8270-ba68b21aff4f",
              "key": "authId",
              "value": "{{user_authIdId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-540be258-06cd-4531-a5af-c8020293f802"
    },
    {
      "name": "RideSearch",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var responseBody = pm.response.json()",
              " pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.collectionVariables.set(\"curr_searchId\", responseBody.searchId);",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "f8acc376-31d6-48b7-80d8-04d95a23e64c"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)",
              "",
              "var moment = require('moment');",
              "var currentTime = moment.utc();",
              "var newTime = currentTime.add(1, 'minutes');",
              "var newcurrentTime = moment.utc();",
              "",
              "var returnTime = newcurrentTime.add(1440, 'minutes');",
              "pm.globals.set(\"current_time_plus_one_minute\", newTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
              "",
              "pm.globals.set(\"current_time_plus_one_day\", returnTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "9da8cc2d-ce6b-4e3f-a3a1-a700158b3413"
          }
        }
      ],
      "id": "fce345be-747b-4bb0-8634-305bd2faac20",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": " {\n     \"fareProductType\": \"INTER_CITY\",\n     \"contents\": {\n         \"roundTrip\": true,\n         \"returnTime\": \"{{current_time_plus_one_day}}\",\n         \"startTime\": \"{{current_time_plus_one_minute}}\",\n         \"origin\": {\n             \"address\": {\n                 \"area\": \"8th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Buildings\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.942245080720754,\n                 \"lon\": 77.62223730729022\n             }\n         },\n         \"autoAssignEnabledV2\": true,\n         \"autoAssignEnabled\": true,\n         \"destination\": {\n             \"address\": {\n                 \"area\": \"6th Block Koramangala\",\n                 \"areaCode\": \"560047\",\n                 \"building\": \"Juspay Apartments\",\n                 \"city\": \"Bangalore\",\n                 \"country\": \"India\",\n                 \"door\": \"#444\",\n                 \"street\": \"18th Main\",\n                 \"state\": \"Karnataka\"\n             },\n             \"gps\": {\n                 \"lat\": 12.30571815808442,\n                 \"lon\": 76.65239202898034\n             }\n         },\n         \"stops\": [\n             {\n                 \"address\": {\n                     \"area\": \"6th Block Koramangala\",\n                     \"areaCode\": \"560047\",\n                     \"building\": \"Juspay Apartments\",\n                     \"city\": \"Bangalore\",\n                     \"country\": \"India\",\n                     \"door\": \"#444\",\n                     \"street\": \"18th Main\",\n                     \"state\": \"Karnataka\"\n                 },\n                 \"gps\": {\n                     \"lat\": 12.30571815808442,\n                     \"lon\": 76.65239202898034\n                }\n             }\n         ]\n     }\n }\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch"
          ]
        }
      },
      "response": [],
      "uid": "38579165-fce345be-747b-4bb0-8634-305bd2faac20"
    },
    {
      "name": "SearchIdResults",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "var incomingQuotes = jsonData.quotes;",
              "var maxRetries = 3; // Maximum number of retries",
              "",
              "// Initialize or increment the retry count",
              "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
              "",
              "if (incomingQuotes && incomingQuotes.length > 0) {",
              "    var quotesLen = incomingQuotes.length;",
              "    for (var i = 0; i < quotesLen; i++) {",
              "        if (incomingQuotes[i].onDemandCab.agencyName === \"Namma Yatri\" && incomingQuotes[i].onDemandCab.serviceTierName === \"Sedan\") {",
              "            pm.collectionVariables.set(\"EstiSedan\", incomingQuotes[i].onDemandCab.id);",
              "            console.log(incomingQuotes[i].onDemandCab.id + \" SedanEstimateId\");",
              "            break; // Exit the loop after finding the first match",
              "        }",
              "    }",
              "    // Reset retry count if quotes are found",
              "    pm.collectionVariables.set(\"retryCount\", 0);",
              "} else {",
              "    // Increment retry count if quotes are empty",
              "    retryCount++;",
              "    pm.collectionVariables.set(\"retryCount\", retryCount);",
              "",
              "    if (retryCount < maxRetries) {",
              "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
              "        postman.setNextRequest(pm.info.requestName); // Re-run the same request",
              "    } else {",
              "        console.log(`Max retries reached (${maxRetries}).`);",
              "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
              "    }",
              "}",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request);",
              "    console.log('res', responseBody);",
              "    pm.response.to.have.status(200);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "e74cb869-ebfc-4c6d-8856-a1622510c451"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},3000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "edb762bf-f857-4120-a6ec-cd8ad3e01e48"
          }
        }
      ],
      "id": "24def27f-4c1b-4c21-a8cc-bec6315bb3c5",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "token",
            "value": "{{curr_user_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch",
            ":searchId",
            "results"
          ],
          "variable": [
            {
              "id": "fc240939-a408-457c-a3e6-b650177aa98e",
              "key": "searchId",
              "value": "{{curr_searchId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-24def27f-4c1b-4c21-a8cc-bec6315bb3c5"
    },
    {
      "name": "/rideSearch/quotes/:quoteId/confirm",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const body = JSON.parse(responseBody);",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.collectionVariables.set(\"boookingId\",body.bookingId);",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "0f52e8d3-ac3b-47f2-b6ae-1e5bed6efed7"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},3000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "d21eeb3d-931c-4c17-bacc-5a54ef2185ca"
          }
        }
      ],
      "id": "db37691a-77de-4289-a491-2d3512b91a9d",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "token",
            "value": "{{app-reg-token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch/quotes/:quoteId/confirm",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch",
            "quotes",
            ":quoteId",
            "confirm"
          ],
          "variable": [
            {
              "id": "1aaf2bc2-1b07-41bb-85e5-19aaad2aeb96",
              "key": "quoteId",
              "value": "{{EstiSedan}}",
              "description": "(Required) "
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-db37691a-77de-4289-a491-2d3512b91a9d"
    },
    {
      "name": "nearbyRideRequest",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var responseBody = pm.response.json();",
              "var nearbyRequest = responseBody.searchRequestsForDriver;",
              "var maxRetries = 4; // Maximum number of retries",
              "",
              "// Initialize or increment the retry count",
              "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
              "",
              "if (nearbyRequest && nearbyRequest.length > 0) {",
              "    // Set the searchReq_Id collection variable",
              "    pm.collectionVariables.set(\"searchReq_Id\", nearbyRequest[0].searchRequestId);",
              "    console.log(nearbyRequest[0].searchRequestId + \" searchRequestId\");",
              "",
              "    // Reset the retry count as the request was successful",
              "    pm.collectionVariables.set(\"retryCount\", 0);",
              "} else {",
              "    // Increment the retry count",
              "    retryCount++;",
              "    pm.collectionVariables.set(\"retryCount\", retryCount);",
              "",
              "    if (retryCount < maxRetries) {",
              "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
              "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
              "    } else {",
              "        console.log(`Max retries reached (${maxRetries}).`);",
              "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
              "    }",
              "}",
              "",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', pm.info.requestName);",
              "    console.log('res', responseBody);",
              "    pm.response.to.have.status(200);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "6e81ffb7-7aa2-4bdc-99d8-4e313af51146"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              " setTimeout(function(){},5000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "044fd6fb-df53-466e-9fdc-5cc324bd4870"
          }
        }
      ],
      "id": "b29b170d-a688-4e0d-9b29-df92b925d4fd",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "nearbyRideRequest"
          ]
        }
      },
      "response": [],
      "uid": "38579165-b29b170d-a688-4e0d-9b29-df92b925d4fd"
    },
    {
      "name": "quoteOffer",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "console.log(pm.collectionVariables.get(\"searchReq_Id\"))",
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "a48f7445-c798-49ec-a7cc-ed8b5894b1c7"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "4ec1dee6-0c8e-4b67-b077-686b48537ecf"
          }
        }
      ],
      "id": "6d8ff79e-3f3b-4292-87ac-fec483bef024",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"searchRequestId\":\"{{searchReq_Id}}\"\n  //\"offeredFare\": 0\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "searchRequest",
            "quote",
            "offer"
          ]
        }
      },
      "response": [],
      "uid": "38579165-6d8ff79e-3f3b-4292-87ac-fec483bef024"
    },
    {
      "name": "driverRideList",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.collectionVariables.set(\"DriverRide_id\", jsonData.list[0].id);",
              "console.log(pm.environment.get(\"DriverRide_id\"));",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "id": "a57e19f9-30aa-4ff7-867e-d4fd22ef2f99"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "id": "018094a9-cf68-4eab-873b-8f69e3a8c2b0"
          }
        }
      ],
      "id": "cfb9a67d-1574-40a9-a5d8-37a4bba8b040",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=1&onlyActive=true",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            "list"
          ],
          "query": [
            {
              "key": "limit",
              "value": "1"
            },
            {
              "key": "onlyActive",
              "value": "true"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-cfb9a67d-1574-40a9-a5d8-37a4bba8b040"
    },
    {
      "name": "UserBookingList",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.test(\"Status code is 200\", function () {",
              "     console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "let rideStarted= pm.collectionVariables.get(\"rideStarted\")",
              "if(rideStarted === true)",
              "{",
              "    pm.collectionVariables.set(\"intercityEndRideOtp\",jsonData.list[0].rideList[0].endOtp)",
              "    postman.setNextRequest(\"EndRide\")",
              "}",
              "else",
              "{",
              "pm.collectionVariables.set(\"startOtp\", jsonData.list[0].rideList[0].rideOtp);",
              "}"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "77ba49a1-b5d4-40cf-b345-66a4e905e70b"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "bcf64bbc-a15f-492b-b6f8-07441793bae0"
          }
        }
      ],
      "id": "f6ed63d4-448d-4c71-bfb0-16eee603dffc",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl_app}}/rideBooking/list?limit=20&onlyActive=true",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideBooking",
            "list"
          ],
          "query": [
            {
              "key": "limit",
              "value": "20"
            },
            {
              "key": "onlyActive",
              "value": "true"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-f6ed63d4-448d-4c71-bfb0-16eee603dffc"
    },
    {
      "name": "/driver/ride/:rideid/cancel",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Validating whether the Status code is 200\", function () {",
              "     console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "c791f0fb-431f-4181-a0b4-d5502d508b86"
          }
        }
      ],
      "id": "ed7aa29d-eec7-4e13-9ea4-57a2ad2eb4fc",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "token",
            "value": ""
          },
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"reasonCode\": \"aliquip\",\n    \"additionalInfo\": \"nostrud dolore dolor occaecat esse\"\n}"
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/cancel",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            ":rideId",
            "cancel"
          ],
          "variable": [
            {
              "id": "41f6f568-ae7b-47cb-a6e6-9b41b48acdd7",
              "key": "rideId",
              "value": "{{DriverRide_id}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-ed7aa29d-eec7-4e13-9ea4-57a2ad2eb4fc"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "a98e606d-fceb-43ba-95eb-80e11287b332"
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "e44b677d-4feb-4142-bbf7-3a68eae06900"
      }
    }
  ],
  "variable": [
    {
      "key": "driver_number",
      "value": ""
    },
    {
      "key": "user_number",
      "value": ""
    },
    {
      "key": "rider_token",
      "value": ""
    },
    {
      "key": "driver_id",
      "value": ""
    },
    {
      "key": "user_authIdId",
      "value": ""
    },
    {
      "key": "curr_searchId",
      "value": ""
    },
    {
      "key": "estimate_id",
      "value": ""
    },
    {
      "key": "searchReq_Id",
      "value": ""
    },
    {
      "key": "quote_id",
      "value": ""
    },
    {
      "key": "DriverRide_id",
      "value": ""
    },
    {
      "key": "otp",
      "value": ""
    },
    {
      "key": "curr_user_token",
      "value": ""
    },
    {
      "key": "curr_rider_authId",
      "value": ""
    },
    {
      "key": "rider_authId",
      "value": ""
    },
    {
      "key": "EstiSedan",
      "value": "",
      "type": "string"
    },
    {
      "key": "curr_estimateid",
      "value": ""
    },
    {
      "key": "EstiAuto",
      "value": "",
      "type": "string"
    },
    {
      "key": "rideStarted",
      "value": ""
    },
    {
      "key": "startOtp",
      "value": ""
    },
    {
      "key": "rideAssigned",
      "value": ""
    },
    {
      "key": "intercityEndRideOtp",
      "value": ""
    },
    {
      "key": "curr_userr_authId",
      "value": "",
      "type": "string"
    },
    {
      "key": "booking_id",
      "value": "",
      "type": "string",
      "disabled": true
    },
    {
      "key": "vehicleVariant",
      "value": ""
    },
    {
      "key": "curr_app_bookingId",
      "value": "",
      "type": "string"
    },
    {
      "key": "boookingId",
      "value": ""
    },
    {
      "key": "booking_id",
      "value": ""
    },
    {
      "key": "EstiSUV",
      "value": "{{EstiSUV}}"
    },
    {
      "key": "EstiSuv",
      "value": "\"10cdf276-b053-4859-9600-d26ee99b7b84\""
    },
    {
      "key": "retryCount",
      "value": ""
    }
  ]
}