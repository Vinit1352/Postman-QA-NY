{
  "info": {
    "_postman_id": "c365c560-d16c-4aa8-bd4b-a6b3d09798b2",
    "name": "NY Rental user cancellation Newman",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "updatedAt": "2025-04-01T09:53:34.000Z",
    "createdAt": "2024-12-24T07:38:24.000Z",
    "lastUpdatedBy": "40603215",
    "uid": "38579165-c365c560-d16c-4aa8-bd4b-a6b3d09798b2"
  },
  "item": [
    {
      "name": "/auth",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "6fb91211-aff2-49b8-a6e1-db7c606d60d7",
            "exec": [
              "//pm.variables.set(\"driver_number\", 9876544442);",
              "//pm.variables.set(\"driver_number\",8337860007);",
              "pm.variables.set(\"driver_number\", 6378299819);",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "37e1dc51-6a49-4f09-ae83-14714e89aded",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null)",
              "}",
              "",
              "else",
              "{",
              "    pm.collectionVariables.set(\"curr_rider_authId\", jsonData.authId);",
              "} ",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "fae23bd1-52a1-4b70-b447-565599e2c10a",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-fae23bd1-52a1-4b70-b447-565599e2c10a"
    },
    {
      "name": "/auth/:authId/verify",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              "else",
              "{",
              "    pm.collectionVariables.set(\"curr_token\", jsonData.token);",
              "}"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "47621312-c586-4a49-8cd7-0d1e72aeb1b3"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "",
              "pm.variables.set(\"login_otp\",7891);"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "201e077a-8313-4f67-ade9-b80281336d3e"
          }
        }
      ],
      "id": "a2657367-c43b-4cc7-ba3e-ac4e7747f958",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\": \"{{login_otp}}\",\n    \"deviceToken\": \"5497873d-10ca-42f3-8a32-22de4c916026\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "id": "39b57ae1-ac30-441d-b70d-9b50a0c8b7c8",
              "key": "authId",
              "value": "{{curr_rider_authId}}",
              "description": "(Required) "
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-a2657367-c43b-4cc7-ba3e-ac4e7747f958"
    },
    {
      "name": "Driverprofile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const obj = JSON.parse(responseBody)",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Validating whether the driver is not on ride\",function(){",
              "    pm.expect(obj.onRide).to.be.false;",
              "})",
              "",
              "pm.collectionVariables.set(\"vehicleVariant\",obj.linkedVehicle.variant)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "e178ed3f-8ae1-41e6-afeb-1c4e714bf87d"
          }
        }
      ],
      "id": "fde650ed-820d-409c-94f6-b28d805ca8d4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/profile",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "profile"
          ]
        }
      },
      "response": [],
      "uid": "38579165-fde650ed-820d-409c-94f6-b28d805ca8d4"
    },
    {
      "name": "/driver/setActivity?active=true",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "469fa64e-3d63-448a-89ca-b24349a92832"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "1893f5b4-263a-4891-9c2b-01aaabc88c11"
          }
        }
      ],
      "id": "cd866a2c-8593-457d-af95-929d00861bed",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "value",
              "value": "{{curr_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          }
        ],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "setActivity"
          ],
          "query": [
            {
              "key": "active",
              "value": "true"
            },
            {
              "key": "mode",
              "value": "\"ONLINE\""
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-cd866a2c-8593-457d-af95-929d00861bed"
    },
    {
      "name": "/driver/location",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "4c535e9d-bf09-4ca7-b0a5-afb966610e31"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "",
              "var moment = require('moment');",
              "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
              "// pm.variables.set(\"driver_lat\",22.553818373085175)",
              "// pm.variables.set(\"driver_lon\",88.3641752787487)",
              "",
              "pm.variables.set(\"driver_lat\",12.942174663507132);",
              "pm.variables.set(\"driver_lon\",77.62216151985702);",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "d139ff06-1cd3-4d5d-9817-ac6755297feb"
          }
        }
      ],
      "id": "8def8573-fdc3-4bfa-bee7-57f7443d1918",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          },
          {
            "key": "token",
            "value": "{{curr_token}}",
            "type": "text"
          },
          {
            "key": "mId",
            "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
            "type": "text"
          },
          {
            "key": "vt",
            "value": "{{vehicleVariant}}",
            "type": "text"
          },
          {
            "key": "dm",
            "value": "ONLINE",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/location",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "location"
          ]
        }
      },
      "response": [],
      "uid": "38579165-8def8573-fdc3-4bfa-bee7-57f7443d1918"
    },
    {
      "name": "/auth",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "89c3cdb3-6d87-4c59-bea1-7661987b95fe",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              "else",
              "{",
              "    pm.collectionVariables.set(\"curr_rider_authId\", jsonData.authId);",
              "}"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "8ef3b5dd-aea4-476f-b31c-24311f0aba51",
            "exec": [
              "setTimeout(function(){},2000)",
              "pm.variables.set(\"user_number\",8109918715);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "af836d49-f9ae-4a48-af88-94c9cd3397a4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\": \"{{user_number}}\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\",\n    \"merchantOperatingCity\":\"Banglore\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-af836d49-f9ae-4a48-af88-94c9cd3397a4"
    },
    {
      "name": "/auth/:authId/verify",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              "else ",
              "{",
              "    pm.collectionVariables.set(\"app-reg-token\", jsonData.token);",
              "}"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "7ddf6993-0f78-44f7-88b1-9d2cab8dc57e"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)",
              "pm.variables.set(\"login_otp\",7891)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "60904881-9ce5-45b2-87c8-ab10f8f868ef"
          }
        }
      ],
      "id": "1440a61b-96de-4fe1-8a52-ab5d54602c4e",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\": \"{{login_otp}}\",\n    \"deviceToken\": \"9e83b4uc-99a1-4306-b90d-2315f3050972\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth/:authId/verify",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "id": "d83ed3a0-6778-4fa3-8220-9ccb55efe29e",
              "key": "authId",
              "value": "{{curr_rider_authId}}",
              "description": "(Required) "
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-1440a61b-96de-4fe1-8a52-ab5d54602c4e"
    },
    {
      "name": "/rideSearch",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "// Special Location - Kolkata Railway station",
              "// pm.variables.set(\"source_lat\",22.601811508526918);",
              "// pm.variables.set(\"source_lon\",88.38310051042808);",
              "var moment = require('moment');",
              "var currentTime = moment.utc();",
              "var newTime = currentTime.add(1, 'minutes');",
              "pm.globals.set(\"current_time_plus_one_minute\", newTime.format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
              "",
              "setTimeout(function(){},3000)",
              "",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "b85aaef3-d574-4fab-9862-0cc97565233e"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "const body = JSON.parse(responseBody);",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              "else ",
              "{",
              "   pm.collectionVariables.set(\"curr_app_searchId\", body.searchId);",
              "}"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "df0ab573-ecab-476e-95b8-9d8404d33340"
          }
        }
      ],
      "id": "e9d83096-ff70-4e93-aeec-642ad194b1da",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{app-reg-token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          },
          {
            "key": "token",
            "value": "{{app-reg-token}}",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"fareProductType\": \"RENTAL\",\n    \"contents\": {\n        \"origin\": {\n            \"address\": {\n                \"street\": \"60 Feet Rd\",\n                \"state\": \"Karnataka\",\n                \"door\": \"\",\n                \"country\": \"India\",\n                \"city\": \"Davanagere\",\n                \"building\": \" \",\n                \"areaCode\": \"\",\n                \"area\": \"Vidyanagar\"\n            },\n            \"gps\": {\n                \"lat\": 12.942174663507132, //12.936591167871103,\n                \"lon\": 77.62216151985702  //77.5856825\n            }\n        },\n        //     \"stops\": [{\n        //         \"address\": {\n        //             \"area\": \"6th Block Koramangala\",\n        //             \"areaCode\": \"560047\",\n        //             \"building\": \"Juspay Apartments\",\n        //             \"city\": \"Bangalore\",\n        //             \"country\": \"India\",\n        //             \"door\": \"#444\",\n        //             \"street\": \"18th Main\",\n        //             \"state\": \"Karnataka\"\n        //         },\n        //         \"gps\": {\n        //           \"lat\":  13.02635918, //12.936591167871103,\n        //    \"lon\": 77.47569521 //77.5856825\n        //         }\n        //     }]\n        \"startTime\": \"{{current_time_plus_one_minute}}\",\n        \"estimatedRentalDistance\": 120000,\n        \"estimatedRentalDuration\": 43200\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch"
          ]
        }
      },
      "response": [],
      "uid": "38579165-e9d83096-ff70-4e93-aeec-642ad194b1da"
    },
    {
      "name": "/rideSearch/:searchId/results",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "var quoteslen = jsonData.quotes.length;",
              "",
              "for (var i = 0; i < quoteslen; i++ )",
              "{  ",
              "    if ((jsonData.quotes[i].onRentalCab.agencyName === \"Namma Yatri\") && (jsonData.quotes[i].onRentalCab.vehicleVariant === \"AUTO_RICKSHAW\")) ",
              "    {",
              "        pm.collectionVariables.set(\"EstiAuto\", jsonData.quotes[i].onRentalCab.id);",
              "        console.log(jsonData.quotes[i].onRentalCab.id + \"AutoEstimateId\")",
              "    }",
              "    if ((jsonData.quotes[i].onRentalCab.agencyName === \"Namma Yatri\") && (jsonData.quotes[i].onRentalCab.vehicleVariant === \"SUV\")) ",
              "    {",
              "        pm.collectionVariables.set(\"Estisuv\", jsonData.quotes[i].onRentalCab.id);",
              "        console.log(jsonData.quotes[i].onRentalCab.id + \"SUVEstimateId\")",
              "    }",
              "    if ((jsonData.quotes[i].onRentalCab.agencyName === \"Namma Yatri\") && (jsonData.quotes[i].onRentalCab.vehicleVariant === \"COMFY\")) {",
              "        pm.collectionVariables.set(\"EstiSedan\", jsonData.quotes[i].onRentalCab.id);",
              "        console.log(jsonData.quotes[i].onRentalCab.id + \"SedanEstimateId\")",
              "    }",
              "    if ((jsonData.quotes[i].onRentalCab.agencyName === \"Namma Yatri\") && (jsonData.quotes[i].onRentalCab.vehicleVariant === \"ECO\")) {",
              "",
              "        pm.collectionVariables.set(\"EstiHatch\", jsonData.quotes[i].onRentalCab.id);",
              "        console.log(jsonData.quotes[i].onRentalCab.id + \"HatchbackEstimateId\")",
              "    }",
              "    if ((jsonData.quotes[i].onRentalCab.agencyName === \"Namma Yatri\") && (jsonData.quotes[i].onRentalCab.vehicleVariant === \"TAXI\")) {",
              "        ",
              "        pm.collectionVariables.set(\"EstiTaxi\", jsonData.quotes[i].onRentalCab.id);",
              "        console.log(jsonData.quotes[i].onRentalCab.id + \"TaxiEstimateId\")",
              "    }",
              "}",
              "",
              "",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "1e327980-2fab-41b7-b016-f69fb462b540"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},5000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "2fb39b3c-3836-4ac4-b334-73b6206a299c"
          }
        }
      ],
      "id": "dcf648fd-9b42-4b86-9e22-5bb2b7c743f4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{app-reg-token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "token",
            "value": "{{app-reg-token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch",
            ":searchId",
            "results"
          ],
          "variable": [
            {
              "id": "353f54c1-b793-4741-9f12-4881c199ff5c",
              "key": "searchId",
              "value": "{{curr_app_searchId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-dcf648fd-9b42-4b86-9e22-5bb2b7c743f4"
    },
    {
      "name": "/rideSearch/quotes/:quoteId/confirm",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "f78cae2c-0ee5-4b6a-a578-f7f7da65a3b0",
            "exec": [
              "const body = JSON.parse(responseBody);",
              "",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.collectionVariables.set(\"rentalBookingId\", body.bookingId);",
              "console.log(\"Rental BookingId \"+pm.collectionVariables.get(\"rentalBookingId\"))"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "e71c81bc-c34d-48e7-af30-97e558e89f1b",
            "exec": [
              "setTimeout(function(){},7000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "5289c991-e06b-4bb1-99cb-0e9ba1b0d1b6",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{app-reg-token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "token",
            "value": "{{app-reg-token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch/quotes/:quoteId/confirm",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch",
            "quotes",
            ":quoteId",
            "confirm"
          ],
          "variable": [
            {
              "key": "quoteId",
              "value": "{{EstiSedan}}",
              "description": "(Required) "
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-5289c991-e06b-4bb1-99cb-0e9ba1b0d1b6"
    },
    {
      "name": "/driver/nearbyRideRequest",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const body = JSON.parse(responseBody);",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "const retry = 5",
              "let count = pm.collectionVariables.get(\"ncrr_count\");",
              "if (count == null || count == undefined) {",
              "    count = 0;",
              "    pm.collectionVariables.set(\"ncrr_count\", count);",
              "}",
              "if (body.searchRequestsForDriver.length != 0 || count > retry) {",
              "    pm.collectionVariables.set(\"driver_search_request_id\", body.searchRequestsForDriver[0].searchTryId);",
              "}",
              "if (count <= retry && body.searchRequestsForDriver.length ==0) {",
              "    count++;",
              "    pm.collectionVariables.set(\"ncrr_count\", count);",
              "    postman.setNextRequest(\"/driver/nearbyRideRequest\");",
              "}",
              "",
              "setTimeout(function(){}, 1000);"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "ab4d7eb9-7c2b-4da5-8878-c87ddd052367"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},7000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "f7ef4f15-dfde-4a00-b5c3-0c6cfed5982c"
          }
        }
      ],
      "id": "e99c80d2-67b8-478b-8762-5092a9aa5c6a",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "token",
            "value": "{{app-reg-token}}",
            "disabled": true
          }
        ],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "nearbyRideRequest"
          ]
        }
      },
      "response": [],
      "uid": "38579165-e99c80d2-67b8-478b-8762-5092a9aa5c6a"
    },
    {
      "name": "/driver/searchRequest/quote/offer",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},4000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "ae23d8e8-1adf-4695-888c-6fc15a084e04"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "const body = JSON.parse(responseBody); ",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "1dc80c67-97d8-485f-b2fd-23ab8952ea6a"
          }
        }
      ],
      "id": "cfe6f4c0-cc26-47db-b31c-0152fd271fa3",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n \"searchRequestId\": \"{{driver_search_request_id}}\"\n\n  //\"offeredFare\": null\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "searchRequest",
            "quote",
            "offer"
          ]
        }
      },
      "response": [],
      "uid": "38579165-cfe6f4c0-cc26-47db-b31c-0152fd271fa3"
    },
    {
      "name": "driver/ride/list",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              "else",
              "{",
              "    console.log(\"rideid\",jsonData.list[0].id)",
              "    pm.collectionVariables.set(\"ride_id\", jsonData.list[0].id);",
              "}",
              ""
            ],
            "type": "text/javascript",
            "id": "3f06df38-d71b-41d9-81e6-081acd396642"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},500)"
            ],
            "type": "text/javascript",
            "id": "342c8550-68ed-4d12-951e-a25e98ab5cba"
          }
        }
      ],
      "id": "bd9f9102-c0a7-4451-99a0-eed90dd53247",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "token",
            "value": "{{app-reg-token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=30&onlyActive=true",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            "list"
          ],
          "query": [
            {
              "key": "limit",
              "value": "30"
            },
            {
              "key": "onlyActive",
              "value": "true"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-bd9f9102-c0a7-4451-99a0-eed90dd53247"
    },
    {
      "name": "v2/rideBooking/list",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "5786e45a-9f1a-47f0-b812-1849b378ce59",
            "exec": [
              "",
              "var jsonData = JSON.parse(responseBody);",
              "",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}",
              "else",
              "{",
              "    pm.collectionVariables.set(\"Booking_id\",jsonData.list[0].id);",
              "}",
              "",
              "if(pm.collectionVariables.get(\"cancellationFlag\")===true)",
              "{",
              "    pm.test(\"Validating whether the booking has been cancelled\",function (){",
              "        ",
              "    })",
              "}",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "38cf2d43-a1bc-4ce7-b502-10a38e923e73",
            "exec": [
              "setTimeout(function(){},500)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "f9f97b50-44cb-4c9a-91cf-1520183e7271",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{app-reg-token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "token",
            "value": "{{app-reg-token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideBooking/list?limit=2&onlyActive=true",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideBooking",
            "list"
          ],
          "query": [
            {
              "key": "limit",
              "value": "2"
            },
            {
              "key": "onlyActive",
              "value": "true"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-f9f97b50-44cb-4c9a-91cf-1520183e7271"
    },
    {
      "name": "/rideBooking/:bookingId/cancel",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "let obj = JSON.parse(responseBody)",
              "",
              "pm.test(\"Verified whether status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "if (responseCode.code !== 200) ",
              "{",
              "    postman.setNextRequest(null);",
              "}"
            ],
            "type": "text/javascript",
            "id": "75dc116f-a0c5-42bd-9172-2059af1405cf"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "id": "e1ead30d-e07a-446d-a3e0-5e4db7c2e026"
          }
        }
      ],
      "id": "e05e6ee0-0021-441f-bfa9-bd5eea5343c6",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{app-reg-token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8"
          },
          {
            "key": "token",
            "value": ""
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"additionalInfo\": \"By Mistake\",\n    \"reasonCode\": \"By Mistake By Mistake\",\n    \"reasonStage\": \"OnSearch\"\n}\n"
        },
        "url": {
          "raw": "{{baseUrl_app}}/rideBooking/:bookingId/cancel",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideBooking",
            ":bookingId",
            "cancel"
          ],
          "variable": [
            {
              "id": "c4882e36-5d45-47dc-a2f6-c744ac5768e5",
              "key": "bookingId",
              "value": "{{Booking_id}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-e05e6ee0-0021-441f-bfa9-bd5eea5343c6"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "3e3041d8-caca-4d89-9f70-184a51c43840"
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "52e199d0-ab7c-452a-ba63-8ce6c989f05e"
      }
    }
  ],
  "variable": [
    {
      "key": "curr_rider_authId",
      "value": ""
    },
    {
      "key": "curr_token",
      "value": ""
    },
    {
      "key": "app-reg-token",
      "value": ""
    },
    {
      "key": "curr_app_searchId",
      "value": ""
    },
    {
      "key": "rentalQuoteId",
      "value": ""
    },
    {
      "key": "accept_searchId",
      "value": ""
    },
    {
      "key": "ride_id",
      "value": ""
    },
    {
      "key": "otp",
      "value": ""
    },
    {
      "key": "Booking_id",
      "value": ""
    },
    {
      "key": "endotp",
      "value": ""
    },
    {
      "key": "vehicleVariant",
      "value": ""
    },
    {
      "key": "rentalBookingId",
      "value": ""
    },
    {
      "key": "cancellationFlag",
      "value": ""
    },
    {
      "key": "curr_estimateid",
      "value": ""
    },
    {
      "key": "EstiSedan",
      "value": "",
      "type": "string"
    },
    {
      "key": "EstiTaxi",
      "value": ""
    },
    {
      "key": "EstiHatch",
      "value": ""
    },
    {
      "key": "Estisuv",
      "value": ""
    },
    {
      "key": "EstiAuto",
      "value": ""
    },
    {
      "key": "ncrr_count",
      "value": ""
    },
    {
      "key": "driver_search_request_id",
      "value": ""
    }
  ]
}