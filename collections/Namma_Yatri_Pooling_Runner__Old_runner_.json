{
  "info": {
    "_postman_id": "aba3ff83-831a-4d62-b5e5-556946dccfa2",
    "name": "Namma Yatri Pooling Runner (Old runner)",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "updatedAt": "2024-12-24T07:38:24.000Z",
    "createdAt": "2024-12-24T07:38:24.000Z",
    "lastUpdatedBy": "38579165",
    "uid": "38579165-aba3ff83-831a-4d62-b5e5-556946dccfa2"
  },
  "item": [
    {
      "name": "Making drivers intelligent by triggering ridesearch",
      "item": [
        {
          "name": "Drivers Authentication",
          "item": [
            {
              "name": "/auth",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verify whether Status code is 200\", function () {",
                      "    console.log('req', request)",
                      "    console.log('res', responseBody)",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\");",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\");",
                      "let driver_authIds = pm.collectionVariables.get('driver_authIds');",
                      "",
                      "// Retrieve the array from collection variables and parse it",
                      "",
                      "",
                      "",
                      "if (driver_authIds) ",
                      "{",
                      "    driver_authIds = JSON.parse(driver_authIds);",
                      "} ",
                      "",
                      "else ",
                      "{",
                      "    driver_authIds = [];",
                      "}",
                      "",
                      "driver_authIds.push(jsonData.authId);",
                      "",
                      "// Convert the updated array back to a JSON string",
                      "pm.collectionVariables.set(\"driver_authIds\", JSON.stringify(driver_authIds));",
                      "",
                      "",
                      "// Increment initial_count",
                      "pm.collectionVariables.set(\"initial_count\", ++initial_count);",
                      "",
                      "",
                      "if (initial_count <= total_numbers) {",
                      "    postman.setNextRequest(\"/auth\");",
                      "} ",
                      "else ",
                      "{",
                      "    pm.collectionVariables.set(\"initial_count\", 1);",
                      "    console.log(driver_authIds);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "ae74e536-4398-47bc-9a68-5f35339ec3de"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "// var driver_numbers = [\"9876544440\",\"9876544441\",\"9876544459\",\"9876544443\",\"9876544444\",\"9876544460\",\"9876544446\",\"9876544447\",\"9876544448\",\"9876544449\",\"9876544450\",\"9876544451\"]",
                      "",
                      "",
                      "var driver_numbers = [\"7337860001\",\"7337860002\",\"6337860003\",\"6337860004\",\"9876544456\",\"9876544452\"]",
                      "",
                      "pm.collectionVariables.set(\"driver_numbers\", [])",
                      "pm.collectionVariables.set(\"driver_numbers\",JSON.stringify(driver_numbers))",
                      "",
                      "pm.collectionVariables.set(\"total_numbers\", driver_numbers.length)",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "",
                      "if (initial_count == 1) {",
                      "    pm.collectionVariables.set(\"driver_authIds\",[])",
                      "    pm.collectionVariables.set(\"driver_authIds\", JSON.stringify());",
                      "    ",
                      "}",
                      "",
                      "pm.variables.set(\"driver_number\",driver_numbers[initial_count-1])",
                      "setTimeout(function(){},500)"
                    ],
                    "type": "text/javascript",
                    "id": "b9565f54-98aa-4e7e-9400-d617ce90dd85"
                  }
                }
              ],
              "id": "8f0668b5-0a6d-42f2-85d3-216f1a684d7e",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/auth",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "auth"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-8f0668b5-0a6d-42f2-85d3-216f1a684d7e"
            },
            {
              "name": "/auth/:authId/verify driver",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verify whether Status code is 200\", function () {",
                      "    console.log('req', request)",
                      "    console.log('res', responseBody)",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\");",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\");",
                      "let driver_tokens = pm.collectionVariables.get('driver_tokens');",
                      "",
                      "// Retrieve the array from collection variables and parse it",
                      "",
                      "",
                      "",
                      "if (driver_tokens) ",
                      "{",
                      "    driver_tokens = JSON.parse(driver_tokens);",
                      "} ",
                      "",
                      "else ",
                      "{",
                      "    driver_tokens = [];",
                      "}",
                      "",
                      "driver_tokens.push(jsonData.token);",
                      "",
                      "// Convert the updated array back to a JSON string",
                      "pm.collectionVariables.set(\"driver_tokens\", JSON.stringify(driver_tokens));",
                      "",
                      "",
                      "// Increment initial_count",
                      "pm.collectionVariables.set(\"initial_count\", ++initial_count);",
                      "",
                      "",
                      "if (initial_count <= total_numbers) {",
                      "    postman.setNextRequest(\"/auth/:authId/verify driver\");",
                      "} ",
                      "else ",
                      "{",
                      "    pm.collectionVariables.set(\"initial_count\", 1);",
                      "    console.log(driver_tokens);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "c0a94263-07d5-4cf7-8ede-8193d612c7d3"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "let driver_authIds = JSON.parse(pm.collectionVariables.get(\"driver_authIds\"))",
                      "",
                      "pm.variables.set(\"driver_authId\",driver_authIds[initial_count-1])",
                      "",
                      "if(initial_count===1)",
                      "{",
                      "    pm.collectionVariables.set(\"driver_tokens\", JSON.stringify([]));",
                      "}",
                      "",
                      "setTimeout(function(){},500)"
                    ],
                    "type": "text/javascript",
                    "id": "196d9d15-582e-48a8-b6fa-22d208446bc1"
                  }
                }
              ],
              "id": "54bf2336-555c-47b8-898e-7d5e32a2f34b",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"7891\",\n    \"deviceToken\": \"5497873d-10ca-42f3-8a32-22de4c916026\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "auth",
                    ":authId",
                    "verify"
                  ],
                  "variable": [
                    {
                      "id": "4bdc658c-ccaa-47fe-911b-2f7fc3f8932c",
                      "key": "authId",
                      "value": "{{driver_authId}}",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-54bf2336-555c-47b8-898e-7d5e32a2f34b"
            }
          ],
          "id": "5a7e96f3-cc4d-416e-bbbd-3372389a5313",
          "uid": "38579165-5a7e96f3-cc4d-416e-bbbd-3372389a5313"
        },
        {
          "name": "Drivers Location",
          "item": [
            {
              "name": "/driver/location",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "",
                      "pm.test(\"Verified whether Status code is 200\", function () {",
                      "    console.log('req', request)",
                      "    console.log('res', responseBody)",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                      "",
                      "if(initial_count<=total_numbers)",
                      "{",
                      "postman.setNextRequest(\"/driver/location\")",
                      "}",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"initial_count\",1)",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "f1106556-12b4-4928-a010-721de3c20323"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "var moment = require('moment');",
                      "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                      "",
                      "// All drivers is at same place",
                      "//var lat = [13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676,13.012815022357676]",
                      "//var lon = [77.5297004657731,77.5297004657731,77.5297004657731,77.5297004657731,77.5297004657731,77.5297004657731,77.5297004657731,77.5297004657731,77.5297004657731,77.5297004657731]",
                      "",
                      "// for 4.7km",
                      "var lat =[12.91713221,12.91680788,12.9177424,12.91758291,12.91759609,12.9185274,12.91757365,12.91777255,12.92022373,\t12.92022931,12.92186684\t,12.92188364]",
                      "var lon =[77.57387864,77.57314546,77.57473026,77.57455466,77.57601576,77.57603411,77.5703156,77.56949333,77.57796216,\t77.57795806,77.57671168,77.57577662]",
                      "",
                      "",
                      "// for 10.1 km ",
                      "//var lat =[12.95583698,12.95452323,12.95165301,12.95279939,12.95331861,12.94599061,12.94854786,12.94806834,12.94854355,12.94780821,12.94747155,12.94676108]",
                      "//var lon =[77.62035617,77.62267251,77.62285879,77.62355204,77.62513338,77.62194193,77.62364932,77.62117244,77.62642702,\t77.62667624,77.62590473,77.6269377]",
                      "",
                      "//For 15.2km ",
                      "//var lat = [12.9966869,12.99742172,12.99788293,12.99615884,12.99463361,12.99521008,12.99630592,12.99593714,12.99173364,\t12.99347502,12.9928577,12.99380019]",
                      "//var lon =[77.58786433,77.58097759,77.5817599,77.58395577,77.58953743,77.58233529,77.58243904,77.58331766,77.58299817,77.58902058,\t77.59104372,77.58916379]",
                      "",
                      "// var lat = [13.012815022357676,13.012815022357676]",
                      "// var lon = [77.5297004657731,77.5297004657731]",
                      "",
                      "",
                      "",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                      "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                      "",
                      "",
                      "pm.variables.set(\"driver_lat\", lat[initial_count-1])",
                      "pm.variables.set(\"driver_lon\", lon[initial_count-1])",
                      "",
                      "",
                      "pm.collectionVariables.set(\"driversLat\",JSON.stringify(lat))",
                      "pm.collectionVariables.set(\"driversLon\",JSON.stringify(lon))",
                      "",
                      "setTimeout(function(){},500)"
                    ],
                    "type": "text/javascript",
                    "id": "a9e9af6b-b3c7-45a0-83f3-d9364dd70df4"
                  }
                }
              ],
              "id": "6e4d8b60-9ec4-4c40-846e-f9be9fef09b9",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{driver_Token}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  },
                  {
                    "key": "vt",
                    "value": "AUTO_RICKSHAW",
                    "type": "text"
                  },
                  {
                    "key": "mId",
                    "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                    "type": "text"
                  },
                  {
                    "key": "dm",
                    "value": "ONLINE",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/location",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "location"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-6e4d8b60-9ec4-4c40-846e-f9be9fef09b9"
            }
          ],
          "id": "05936c0c-7d5b-4a03-8ac7-15c7784554a1",
          "uid": "38579165-05936c0c-7d5b-4a03-8ac7-15c7784554a1"
        },
        {
          "name": "Drivers Mode",
          "item": [
            {
              "name": "/driver/setActivity",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "",
                      "pm.test(\"Verified whether Status code is 200\", function () {",
                      "    console.log('req', request)",
                      "    console.log('res', responseBody)",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                      "",
                      "if(initial_count<=total_numbers)",
                      "{",
                      "postman.setNextRequest(\"/driver/setActivity\")",
                      "}",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"initial_count\",1)",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "f425a6f0-7e26-4ea6-a828-d3d758f7e6a7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "var active = [true,true]",
                      "var mode = [\"SILENT\",\"SILENT\",\"SILENT\",\"SILENT\",\"ONLINE\",\"ONLINE\"]",
                      "",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                      "",
                      "",
                      "pm.variables.set(\"activity_status\",active[initial_count-1])",
                      "pm.variables.set(\"mode\",mode[initial_count-1])",
                      "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                      "setTimeout(function(){},500)"
                    ],
                    "type": "text/javascript",
                    "id": "a5611692-86c9-460d-b7a2-82e1ce1144ec"
                  }
                }
              ],
              "id": "6c159c6e-0414-443a-88e8-10cfa4c89030",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{driver_Token}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"{{mode}}\"",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "setActivity"
                  ],
                  "query": [
                    {
                      "key": "active",
                      "value": "true"
                    },
                    {
                      "key": "mode",
                      "value": "\"{{mode}}\""
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-6c159c6e-0414-443a-88e8-10cfa4c89030"
            }
          ],
          "id": "c8234308-2a40-4f23-a005-6737637ab3e0",
          "uid": "38579165-c8234308-2a40-4f23-a005-6737637ab3e0"
        },
        {
          "name": "Drivers Profile",
          "item": [
            {
              "name": "/driver/profile",
              "event": [
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                      "",
                      "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                      "setTimeout(function(){},500)"
                    ],
                    "type": "text/javascript",
                    "id": "7564b082-5342-48bf-8530-516f1ad4fa48"
                  }
                },
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                      "",
                      "pm.test(\"Verified whether Status code is 200\", function () {",
                      "    console.log('req', request)",
                      "    console.log('res', responseBody)",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                      "",
                      "if(initial_count<=total_numbers)",
                      "{",
                      "postman.setNextRequest(\"/driver/profile\")",
                      "}",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"initial_count\",1)",
                      "}",
                      "",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "3aa56bd2-5ff7-42c0-820b-b62b0a263473"
                  }
                }
              ],
              "id": "dd4b3c6d-8ad2-4253-823c-f75da9f99252",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{driver_Token}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "token",
                    "value": "60819053-f00e-4993-bbde-df2669b3c0db"
                  }
                ],
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/profile",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "profile"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-dd4b3c6d-8ad2-4253-823c-f75da9f99252"
            }
          ],
          "id": "cbedde03-9deb-43ab-92f5-849dba5de8a8",
          "uid": "38579165-cbedde03-9deb-43ab-92f5-849dba5de8a8"
        },
        {
          "name": "Customers Authentication",
          "item": [
            {
              "name": "/customerauth",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verify whether Status code is 200\", function () {",
                      "    console.log('req', request)",
                      "    console.log('res', responseBody)",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.collectionVariables.set(\"customerAuthId\",jsonData.authId)",
                      "",
                      "// var initial_count = pm.collectionVariables.get(\"initial_count\");",
                      "// var customerNumbersCount = pm.collectionVariables.get(\"customerNumbersCount\");",
                      "// let customerAuthIds = pm.collectionVariables.get('customerAuthIds');",
                      "",
                      "// // Retrieve the array from collection variables and parse it",
                      "",
                      "",
                      "",
                      "// if (customerAuthIds) ",
                      "// {",
                      "//     customerAuthIds = JSON.parse(customerAuthIds);",
                      "// } ",
                      "",
                      "// else ",
                      "// {",
                      "//     customerAuthIds = [];",
                      "// }",
                      "",
                      "// customerAuthIds.push(jsonData.authId);",
                      "",
                      "// // Convert the updated array back to a JSON string",
                      "// pm.collectionVariables.set(\"customerAuthIds\", JSON.stringify(customerAuthIds));",
                      "",
                      "",
                      "// // Increment initial_count",
                      "// pm.collectionVariables.set(\"initial_count\", ++initial_count);",
                      "",
                      "",
                      "// if (initial_count <= customerNumbersCount) {",
                      "//     postman.setNextRequest(\"/customerauth\");",
                      "// } ",
                      "// else ",
                      "// {",
                      "//     pm.collectionVariables.set(\"initial_count\", 1);",
                      "//     console.log(customerAuthIds);",
                      "// }",
                      "",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "9b30d2dd-dcd9-4b89-ae2b-bf2f7762c1a1"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "// var customerNumbers = [\"9876000000\",\"9876000001\"]",
                      "",
                      "// pm.collectionVariables.set(\"customerNumbers\", [])",
                      "// pm.collectionVariables.set(\"customerNumbers\",JSON.stringify(customerNumbers))",
                      "",
                      "// pm.collectionVariables.set(\"customerNumbersCount\", customerNumbers.length)",
                      "// let initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "// let customerNumbersCount = pm.collectionVariables.get(\"customerNumbersCount\")",
                      "",
                      "// if (initial_count == 1) {",
                      "//     pm.collectionVariables.set(\"customerAuthIds\",[])",
                      "//     pm.collectionVariables.set(\"customerAuthIds\", JSON.stringify());",
                      "    ",
                      "// }",
                      "// pm.variables.set(\"customerNumber\",customerNumbers[initial_count-1])",
                      "// pm.variables.set(\"merchantId\",\"NAMMA_YATRI\")",
                      "",
                      "// setTimeout(function(){},500)",
                      "",
                      "pm.variables.set(\"customerNumber\",9678420000)",
                      "pm.variables.set(\"merchantId\",\"NAMMA_YATRI\")",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "101ee712-a074-4ac4-bbdc-b6f5b873ceb6"
                  }
                }
              ],
              "id": "8ab00aff-e860-4249-bc49-b534e0cb2016",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"mobileNumber\": \"{{customerNumber}}\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\" : \"{{merchantId}}\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/auth",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "auth"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-8ab00aff-e860-4249-bc49-b534e0cb2016"
            },
            {
              "name": "/customer/auth/:authId/verify",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verify whether Status code is 200\", function () {",
                      "    console.log('req', request)",
                      "    console.log('res', responseBody)",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.collectionVariables.set(\"customer_Token\",jsonData.token)",
                      "",
                      "// var initial_count = pm.collectionVariables.get(\"initial_count\");",
                      "// var customerNumbersCount = pm.collectionVariables.get(\"customerNumbersCount\");",
                      "// let customerTokens = pm.collectionVariables.get('customerTokens');",
                      "",
                      "// // Retrieve the array from collection variables and parse it",
                      "",
                      "",
                      "",
                      "// if (customerTokens) ",
                      "// {",
                      "//     customerTokens = JSON.parse(customerTokens);",
                      "// } ",
                      "",
                      "// else ",
                      "// {",
                      "//     customerTokens = [];",
                      "// }",
                      "",
                      "// customerTokens.push(jsonData.token);",
                      "",
                      "// // Convert the updated array back to a JSON string",
                      "// pm.collectionVariables.set(\"customerTokens\", JSON.stringify(customerTokens));",
                      "",
                      "",
                      "// // Increment initial_count",
                      "// pm.collectionVariables.set(\"initial_count\", ++initial_count);",
                      "",
                      "",
                      "// if (initial_count <= customerNumbersCount) {",
                      "//     postman.setNextRequest(\"/customer/auth/:authId/verify\");",
                      "// } ",
                      "// else ",
                      "// {",
                      "//     pm.collectionVariables.set(\"initial_count\", 1);",
                      "//     console.log(customerTokens);",
                      "// }",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "673ff7d4-b259-4d56-9d93-b26d8c56f7bf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "",
                      "// var initial_count = pm.collectionVariables.get(\"initial_count\")",
                      "// var customerNumbersCount = pm.collectionVariables.get(\"customerNumbersCount\")",
                      "// let customerAuthIds = JSON.parse(pm.collectionVariables.get(\"customerAuthIds\"))",
                      "",
                      "// pm.variables.set(\"customerAuthId\",customerAuthIds[initial_count-1])",
                      "",
                      "// if(initial_count==1)",
                      "// {",
                      "//     pm.collectionVariables.set(\"customerTokens\", JSON.stringify([]));",
                      "// }",
                      "",
                      "setTimeout(function(){},500)"
                    ],
                    "type": "text/javascript",
                    "id": "a4f01b12-2b9e-4e1a-b2fa-59176146c21b"
                  }
                }
              ],
              "id": "57b456ca-f6de-425a-b9b7-08eedb031519",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"7891\",\n    \"deviceToken\": \"9e83b4uc-00a1-9306-b90d-2345f3050972\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/auth/:authId/verify",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "auth",
                    ":authId",
                    "verify"
                  ],
                  "variable": [
                    {
                      "id": "1a57261a-182e-4938-98d1-67f86144294c",
                      "key": "authId",
                      "value": "{{customerAuthId}}",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-57b456ca-f6de-425a-b9b7-08eedb031519"
            }
          ],
          "id": "0caf4b60-be48-4968-a216-30a6500887d7",
          "uid": "38579165-0caf4b60-be48-4968-a216-30a6500887d7"
        },
        {
          "name": "/rideSearch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const body = JSON.parse(responseBody);",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "pm.collectionVariables.set(\"ride_searchId\", body.searchId);",
                  "",
                  "",
                  " "
                ],
                "type": "text/javascript",
                "id": "f280832f-39ce-46e4-bedc-06a36b9f48c3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},5000)"
                ],
                "type": "text/javascript",
                "id": "50cce3a4-b269-4fc9-af0c-df736a580f0e"
              }
            }
          ],
          "id": "e8621360-cbac-4de3-9d7a-4cd2de6d3425",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{customer_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fareProductType\": \"ONE_WAY\",\n    \"contents\": {\n        \"origin\": {\n            \"address\": {\n                \"area\": \"8th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Buildings\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\":12.91776069,\t\n                \"lon\": 77.57345026\n            }\n        },\n        \"destination\": {\n            \"address\": {\n                \"area\": \"6th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Apartments\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\":12.94168667,\t\n                \"lon\":77.56105117\t\n            }\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch"
              ]
            }
          },
          "response": [],
          "uid": "38579165-e8621360-cbac-4de3-9d7a-4cd2de6d3425"
        },
        {
          "name": "/rideSearch/:searchId/results",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(jsonData.estimates.length===0)",
                  "{",
                  "    postman.setNextRequest(\"/rideSearch\")",
                  "}",
                  "else",
                  "{ ",
                  "var estimateslen = jsonData.estimates.length;",
                  "for (var i = 0; i < estimateslen; i++ )",
                  "{    ",
                  "if ( (jsonData.estimates[i].agencyName === \"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant === \"AUTO_RICKSHAW\")) {",
                  "",
                  "pm.collectionVariables.set(\"EstiAuto\", jsonData.estimates[i].id);",
                  "",
                  "console.log(jsonData.estimates[i].id + \"AutoEstimateId\")",
                  "",
                  "",
                  "}",
                  "",
                  "if ( (jsonData.estimates[i].agencyName === \"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant === \"SUV\")) {",
                  "",
                  "pm.collectionVariables.set(\"Estisuv\", jsonData.estimates[i].id);",
                  "",
                  "console.log(jsonData.estimates[i].id + \"SUVEstimateId\")",
                  "",
                  "}",
                  "",
                  "",
                  "if ( (jsonData.estimates[i].agencyName === \"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant === \"SEDAN\")) {",
                  "",
                  "pm.collectionVariables.set(\"EstiSedan\", jsonData.estimates[i].id);",
                  "",
                  "console.log(jsonData.estimates[i].id + \"SedanEstimateId\")",
                  "}",
                  "",
                  "",
                  "",
                  "if ( (jsonData.estimates[i].agencyName === \"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant === \"HATCHBACK\")) {",
                  "",
                  "pm.collectionVariables.set(\"EstiHatch\", jsonData.estimates[i].id);",
                  "",
                  "console.log(jsonData.estimates[i].id + \"HatchbackEstimateId\")",
                  "}",
                  "",
                  "",
                  "",
                  "if ( (jsonData.estimates[i].agencyName === \"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant === \"TAXI\")) {",
                  "",
                  "pm.collectionVariables.set(\"EstiTaxi\", jsonData.estimates[i].id);",
                  "",
                  "console.log(jsonData.estimates[i].id + \"TaxiEstimateId\")",
                  "}",
                  "",
                  "}",
                  "}"
                ],
                "type": "text/javascript",
                "id": "b20fd423-f7e5-4627-8b91-7419fe71549b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "id": "46e1a61a-ba5c-4703-867a-d1c3935e92d1"
              }
            }
          ],
          "id": "eae83230-87b1-4cd4-bea4-bfe0feae37f4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{customer_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                ":searchId",
                "results"
              ],
              "variable": [
                {
                  "id": "5a2dc50a-071a-44e1-9587-70fdda7b49b5",
                  "key": "searchId",
                  "value": "{{ride_searchId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-eae83230-87b1-4cd4-bea4-bfe0feae37f4"
        },
        {
          "name": "/estimate/:estimateId/select",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript",
                "id": "426e6586-a2af-4ba7-91c4-0eb661049bdc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},1000)"
                ],
                "type": "text/javascript",
                "id": "d11ed7d4-bbef-485a-886b-1b3f1bf36bc4"
              }
            }
          ],
          "id": "fcdd3c21-a66a-4ae1-ac40-4a9d5fa7bd3c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{customer_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"autoAssignEnabled\": true,\n    \"autoAssignEnabledV2\": true,\n    \"customerExtraFee\": null,\n    \"otherSelectedEstimates\": [\n        \"{{EstiSedan}}\",\"{{EstiHatch}}\"\n    ],\n    \"paymentMethodId\": \"string\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/estimate/:estimateId/select2",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "estimate",
                ":estimateId",
                "select2"
              ],
              "variable": [
                {
                  "id": "009f4af4-2d96-4514-8862-414507cb524f",
                  "key": "estimateId",
                  "value": "{{EstiAuto}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-fcdd3c21-a66a-4ae1-ac40-4a9d5fa7bd3c"
        },
        {
          "name": "/driver/nearbyRideRequest [b1]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "var batch_1 = pm.collectionVariables.get(\"batch_1\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 1\")",
                  "    var result = batch_1.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_1\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_1.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_1\",result)",
                  "}",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b1]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "a381a738-e471-43a6-8dbe-4754a3443a40"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"first_batch_hold_duration\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_1\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "9c6eef97-35fc-4636-be65-8e492ce3212e"
              }
            }
          ],
          "id": "31bfd45e-f32d-4e10-bf22-c4781f0297a4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-31bfd45e-f32d-4e10-bf22-c4781f0297a4"
        },
        {
          "name": "/driver/locationUpdate/3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/3\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "0cf45ebc-1326-4527-9465-88c58868c607"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},1000)"
                ],
                "type": "text/javascript",
                "id": "2f94da3e-986d-4e46-ae8d-801ac58d2194"
              }
            }
          ],
          "id": "528d9e3e-7e36-4020-a5c4-010685f46313",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-528d9e3e-7e36-4020-a5c4-010685f46313"
        },
        {
          "name": "/driver/nearbyRideRequest [b2]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "var batch_2 = pm.collectionVariables.get(\"batch_2\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    console.log('req', request)",
                  "    console.log('res', responseBody)",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 2\")",
                  "    var result = batch_2.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_2\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_2.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_2\",result)",
                  "}",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b2]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "55ee5bcb-7f1b-4573-9ace-03e976d59a9e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_2\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "e539d6d0-37d6-493f-88a5-580b8540f516"
              }
            }
          ],
          "id": "4e51dff7-97b0-4aae-bf11-a47c602315a9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-4e51dff7-97b0-4aae-bf11-a47c602315a9"
        },
        {
          "name": "/driver/locationUpdate/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/1\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "8fa6ecb8-189b-49f5-9989-79c0752cec99"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "7d0e951b-8f83-4450-90c4-a87d21524e8a"
              }
            }
          ],
          "id": "c039148f-8862-423e-865e-2c2e283f4185",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-c039148f-8862-423e-865e-2c2e283f4185"
        },
        {
          "name": "/driver/nearbyRideRequest [b3]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "var batch_3 = pm.collectionVariables.get(\"batch_3\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 3\")",
                  "    var result = batch_3.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_3\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_3.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_3\",result)",
                  "}",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b3]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "ff957dbc-226e-488d-bbce-c79eb7e708b7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_3\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "ec349c2f-e65a-49ee-a067-f5cc246aaeac"
              }
            }
          ],
          "id": "f977c9d8-b4b6-4d99-a7d5-2d0c277a6bfd",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-f977c9d8-b4b6-4d99-a7d5-2d0c277a6bfd"
        },
        {
          "name": "/driver/locationUpdate/2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/2\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "4faa5366-d6c5-40de-ad90-f6d31015fa3c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "d1a9e9b4-cfae-4b90-8a80-6c9a682d11a5"
              }
            }
          ],
          "id": "e05be131-b29e-4d64-92e0-96c660c0e4ff",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-e05be131-b29e-4d64-92e0-96c660c0e4ff"
        },
        {
          "name": "/driver/nearbyRideRequest [b4]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "var batch_4 = pm.collectionVariables.get(\"batch_4\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 4\")",
                  "    var result = batch_4.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_4\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_4.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_4\",result)",
                  "}",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b4]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "52226dfd-dfc9-456a-9ef2-f7810a78ba67"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_4\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "eb8e1833-11fb-4cbd-9259-16d5e610c0dc"
              }
            }
          ],
          "id": "4b47c26f-9f9e-443c-90c2-85dafda7eb0b",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-4b47c26f-9f9e-443c-90c2-85dafda7eb0b"
        },
        {
          "name": "/driver/nearbyRideRequest [b5]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "var batch_5 = pm.collectionVariables.get(\"batch_5\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 5\")",
                  "    var result = batch_5.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_5\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_5.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_5\",result)",
                  "}",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b5]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "34a28b68-22f3-4dc1-9b8c-3b98bd437b19"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_5\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "58e827f1-a2f8-4f9b-85e8-432daea10253"
              }
            }
          ],
          "id": "7b95c0b8-bcc1-46a5-88f2-5cc866bcfcc5",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-7b95c0b8-bcc1-46a5-88f2-5cc866bcfcc5"
        },
        {
          "name": "/driver/nearbyRideRequest [b6]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "var batch_6 = pm.collectionVariables.get(\"batch_6\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 6\")",
                  "    var result = batch_6.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_6\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_6.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_6\",result)",
                  "}",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b6]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "    for(i=0; i<total_numbers;i++){",
                  "        console.log(\"Batch \"+(i+1)+\" = \",pm.collectionVariables.get(\"batch_\"+(i+1)))",
                  "    }",
                  "}",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "fc2366f4-0d66-4cd5-aaf0-061a0b9e1964"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "   //setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_6\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "75dc68de-1387-4b26-8504-ebf70447b2a0"
              }
            }
          ],
          "id": "3374dd00-ccf4-4af3-8c4a-5579ad278a66",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-3374dd00-ccf4-4af3-8c4a-5579ad278a66"
        },
        {
          "name": "/driver/setActivity?active=false",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/setActivity?active=false\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "eddd28e9-4aa4-4034-ac35-27291d5c1f59"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var active = [true,true]",
                  "var mode = [\"ONLINE\",\"ONLINE\"]",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "pm.variables.set(\"activity_status\",active[initial_count-1])",
                  "pm.variables.set(\"mode\",mode[initial_count-1])",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "8f14a6d5-afb2-42ef-88d3-8e4ee61a6f7e"
              }
            }
          ],
          "id": "b6c0ae9b-5331-469d-9122-c88c8e2875da",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/setActivity?active=false&mode=\"OFFLINE\"",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "setActivity"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "false"
                },
                {
                  "key": "mode",
                  "value": "\"OFFLINE\""
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-b6c0ae9b-5331-469d-9122-c88c8e2875da"
        }
      ],
      "id": "7a8a444b-4032-4a75-8538-1c0f8ec93ba0",
      "uid": "38579165-7a8a444b-4032-4a75-8538-1c0f8ec93ba0"
    },
    {
      "name": "Assigning a ride for a driver",
      "item": [
        {
          "name": "Driver 1",
          "item": [
            {
              "name": "/auth Build Score",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null)",
                      "}",
                      "",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"curr_rider_authId_1\", jsonData.authId);",
                      "} ",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "6212ad84-ea08-4d98-8b1c-70439b7b69c7"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "d4725ff4-e279-49fd-bddf-d067bbed753d"
                  }
                }
              ],
              "id": "78735ce5-cf21-4d83-9105-f68e49003e16",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"mobileNumber\":\"9222222225\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/auth",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "auth"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-78735ce5-cf21-4d83-9105-f68e49003e16"
            },
            {
              "name": "/auth/:authId/verify Build score",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"curr_token_1\", jsonData.token);",
                      "    pm.collectionVariables.set(\"driver_1_id\", jsonData.person.id)",
                      "    console.log(\"driver 1 id - \", pm.collectionVariables.get(\"driver_1_id\"))",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "65c684e0-d3eb-4367-83ce-922031d6f2f1"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "d5df0f33-e6ae-4ec0-b135-121a73ea3f35"
                  }
                }
              ],
              "id": "5d910b66-c202-4a90-9cfd-a301d6318fbc",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"7891\",\n    \"deviceToken\": \"5497873d-10ca-42f3-8a32-22de4c916026\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "auth",
                    ":authId",
                    "verify"
                  ],
                  "variable": [
                    {
                      "id": "993d62e3-89f3-4e3e-90a1-d249ff84d31d",
                      "key": "authId",
                      "value": "{{curr_rider_authId_1}}",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-5d910b66-c202-4a90-9cfd-a301d6318fbc"
            },
            {
              "name": "/driver/setActivity 1 online Build Score",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "94a63f96-d146-44a0-a1a0-471ea6fc622d"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "7448022c-a8c2-49f6-bb73-349552be743d"
                  }
                }
              ],
              "id": "1b3adbc7-af83-40dd-aa00-dde3f3d42b64",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "setActivity"
                  ],
                  "query": [
                    {
                      "key": "active",
                      "value": "true"
                    },
                    {
                      "key": "mode",
                      "value": "\"ONLINE\""
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-1b3adbc7-af83-40dd-aa00-dde3f3d42b64"
            },
            {
              "name": "/driver/location Build Score",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "9eae4701-d21d-47af-a051-d7a40ca5569c"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "var moment = require('moment');",
                      "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "5da4b472-2b33-43ba-8b0d-edef18d36f37"
                  }
                }
              ],
              "id": "383c9914-da97-4a50-b234-27b0620fd318",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  },
                  {
                    "key": "dm",
                    "value": "ONLINE",
                    "type": "text"
                  },
                  {
                    "key": "mId",
                    "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                    "type": "text"
                  },
                  {
                    "key": "vt",
                    "value": "AUTO_RICKSHAW",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "[\n    {\n        \"pt\": {\n            \"lat\": 16.82541868,\n            \"lon\": 75.71572701\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/location",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "location"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-383c9914-da97-4a50-b234-27b0620fd318"
            },
            {
              "name": "/user auth",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"user_auth_id_intel\", jsonData.authId);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "da119444-7fab-4bc2-bd2e-065b0477680c"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "f4e3da00-ad03-4677-9bb4-7051d6308f69"
                  }
                }
              ],
              "id": "08f297ec-d541-41a2-b6f2-d704300846f3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"mobileNumber\": \"9876565657\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/auth",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "auth"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-08f297ec-d541-41a2-b6f2-d704300846f3"
            },
            {
              "name": "/auth/:authId/verify",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else ",
                      "{",
                      "    pm.collectionVariables.set(\"user-reg-token-intel\", jsonData.token);",
                      "}",
                      "",
                      "",
                      "",
                      "  "
                    ],
                    "type": "text/javascript",
                    "id": "32d7f326-44fc-4bc2-bddb-657de0ad4396"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "c09f1eda-cc68-4acb-b24e-2e71aadcb5be"
                  }
                }
              ],
              "id": "c7e89940-2d24-42df-aaa2-2d5c881f3201",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"otp\": \"7891\",\n    \"deviceToken\": \"8e83b5dc-99a0-4306-b90d-2345f3050982\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/auth/:authId/verify",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "auth",
                    ":authId",
                    "verify"
                  ],
                  "variable": [
                    {
                      "id": "4291f33e-da19-4229-a901-58d2fb3346ca",
                      "key": "authId",
                      "value": "{{user_auth_id_intel}}",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-c7e89940-2d24-42df-aaa2-2d5c881f3201"
            },
            {
              "name": "/rideSearch",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = JSON.parse(responseBody);",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else ",
                      "{",
                      "   pm.collectionVariables.set(\"user_intel_searchId\", body.searchId);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "05dea669-3feb-4641-b2fb-002984c3ad4c"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},10000)",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "a5ae3fff-686f-4512-a811-0cb4b393ee74"
                  }
                }
              ],
              "id": "10223cd2-fb1a-478d-925b-00c400c157ad",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{user-reg-token-intel}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  },
                  {
                    "key": "token",
                    "value": "{{app-reg-token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"fareProductType\": \"ONE_WAY\",\n    \"contents\": {\n        \"origin\": {\n            \"address\": {\n                \"area\": \"Koramangala 8th Block,Koramangala\",\n                \"areaCode\": \"560095\",\n                \"building\": \"34/3\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\": 16.82541868,\n                \"lon\": 75.71572701\n            }\n        },\n        \"autoassignenabled\":false,\n        \"autoassignenabledV2\":false,\n        \"destination\": {\n            \"address\": {\n                \"area\": \"Mavalli\",\n                \"areaCode\": \"560004\",\n                \"building\": \"\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"\",\n                \"street\": \"\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\":16.82773467,\n                \"lon\":75.72853175\n            }\n        }\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/rideSearch",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "rideSearch"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-10223cd2-fb1a-478d-925b-00c400c157ad"
            },
            {
              "name": "/rideSearch/:searchId/results",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else ",
                      "{",
                      "   pm.collectionVariables.set(\"user_intel_estimateId\", jsonData.estimates[0].id);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "9e39d08a-fa25-47d1-a612-9dbaee7c6d34"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "15309b84-23f4-47eb-b251-bd28ef71a7fe"
                  }
                }
              ],
              "id": "189ae415-fbe5-4e73-8ce0-5264a7e24ae3",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{user-reg-token-intel}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app-reg-token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "rideSearch",
                    ":searchId",
                    "results"
                  ],
                  "variable": [
                    {
                      "id": "a4889f0d-c8aa-46c3-ba81-22246720dc49",
                      "key": "searchId",
                      "value": "{{user_intel_searchId}}"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-189ae415-fbe5-4e73-8ce0-5264a7e24ae3"
            },
            {
              "name": "/estimate/:estimateId/select2",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "927653da-c474-43ab-a0d3-58341b0416d8"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "638d0149-49b1-4410-9e65-d5b41c6be426"
                  }
                }
              ],
              "id": "3bef6f69-81eb-4339-b7a3-6bf3f1033f79",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{user-reg-token-intel}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"customerExtraFee\": null,\n  \"autoAssignEnabledV2\": false,\n  \"autoAssignEnabled\": false\n}\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/estimate/:estimateId/select2",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "estimate",
                    ":estimateId",
                    "select2"
                  ],
                  "variable": [
                    {
                      "id": "829eaf69-e256-46fa-b43b-c7d3c6c76600",
                      "key": "estimateId",
                      "value": "{{user_intel_estimateId}}"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-3bef6f69-81eb-4339-b7a3-6bf3f1033f79"
            },
            {
              "name": "/driver/nearbyRideRequest 1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = JSON.parse(responseBody); ",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else if(body.searchRequestsForDriver.length === 0)",
                      "{",
                      "    console.log(\"Driver didn't receive the request\");",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else",
                      "{",
                      "   pm.collectionVariables.set(\"accept_searchId_1\",body.searchRequestsForDriver[0].searchTryId);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "93a4345a-fb2f-45b4-b6b7-2a340fc4d0f4"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},5000)"
                    ],
                    "type": "text/javascript",
                    "id": "24653c75-6735-4d49-9f8e-f9c102c522b8"
                  }
                }
              ],
              "id": "50b20a00-fb0b-410c-80c7-7d8d1bc0f2e0",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app-reg-token}}",
                    "type": "text",
                    "disabled": true
                  }
                ],
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "nearbyRideRequest"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-50b20a00-fb0b-410c-80c7-7d8d1bc0f2e0"
            },
            {
              "name": "/driver/searchRequest/quote/offer",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = JSON.parse(responseBody); ",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "0d034a92-5056-4ef7-a62c-03d0815e08cf"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "5619fa28-e3d9-47ea-b75c-ead29f87d550"
                  }
                }
              ],
              "id": "87a4a378-16a1-4d3d-8744-dd6ce3ffb346",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "body": {
                  "mode": "raw",
                  "raw": "{\n \"searchRequestId\": \"{{accept_searchId_1}}\",\n\n  \"offeredFare\": null\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "searchRequest",
                    "quote",
                    "offer"
                  ]
                }
              },
              "response": [],
              "uid": "38579165-87a4a378-16a1-4d3d-8744-dd6ce3ffb346"
            },
            {
              "name": "/estimate/:estimateId/quotes",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody); ",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"quoteIdnew\", jsonData.selectedQuotes[0].id);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "246f7daa-a931-48f6-8590-c4a855c44ba5"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "beda6714-68cc-4b47-a071-3fef80cf6b50"
                  }
                }
              ],
              "id": "ffed0817-c33b-4e5b-9eb4-005e702c4de2",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{user-reg-token-intel}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app-reg-token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl_app}}/estimate/:estimateId/quotes",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "estimate",
                    ":estimateId",
                    "quotes"
                  ],
                  "variable": [
                    {
                      "id": "2472df42-5fce-4056-b09f-e7d1398fb97a",
                      "key": "estimateId",
                      "value": "{{user_intel_estimateId}}"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-ffed0817-c33b-4e5b-9eb4-005e702c4de2"
            },
            {
              "name": "/rideSearch/quotes/:quoteId/confirm",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "const body = JSON.parse(responseBody);",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else",
                      "{",
                      "    pm.collectionVariables.set(\"curr_app_bookingId_1\", body.bookingId);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "5caab42f-beb0-4d65-9bfb-733541b2b267"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "329c083a-b2d5-4bf0-9461-829cb56d8cf2"
                  }
                }
              ],
              "id": "01096788-bd39-4be2-8600-7eb2433a8e53",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{user-reg-token-intel}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app_reg_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"fromLocation\": {\n    \"area\": \"string\",\n    \"state\": \"string\",\n    \"country\": \"string\",\n    \"building\": \"string\",\n    \"door\": \"string\",\n    \"street\": \"string\",\n    \"city\": \"string\",\n    \"areaCode\": \"string\"\n  },\n  \"toLocation\": {\n    \"area\": \"string\",\n    \"state\": \"string\",\n    \"country\": \"string\",\n    \"building\": \"string\",\n    \"door\": \"string\",\n    \"street\": \"string\",\n    \"city\": \"string\",\n    \"areaCode\": \"string\"\n  }\n}\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/rideSearch/quotes/:quoteId/confirm",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "rideSearch",
                    "quotes",
                    ":quoteId",
                    "confirm"
                  ],
                  "variable": [
                    {
                      "id": "c272cb09-3b23-423a-9581-cfd7c0f1e55b",
                      "key": "quoteId",
                      "value": "{{quoteIdnew}}",
                      "description": "(Required) "
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-01096788-bd39-4be2-8600-7eb2433a8e53"
            },
            {
              "name": "v2/rideBooking/list",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else",
                      "{",
                      "    let ot =  jsonData.list[0][\"rideList\"][0].rideOtp;",
                      "    pm.collectionVariables.set(\"otp_1\",ot.toString());",
                      "    pm.collectionVariables.set(\"curr_app_bookingId_1\",jsonData.list[0].id);",
                      "}",
                      "",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "abeed873-4f0a-43a9-9456-a4b28ca97a57"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "fd931479-5360-464f-abbd-d8de56bef35e"
                  }
                }
              ],
              "id": "86fb69c3-27e2-46ce-9f89-c0b14241dcc6",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{user-reg-token-intel}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl_app}}/rideBooking/list?limit=20&onlyActive=true",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "rideBooking",
                    "list"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "20"
                    },
                    {
                      "key": "onlyActive",
                      "value": "true"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-86fb69c3-27e2-46ce-9f89-c0b14241dcc6"
            },
            {
              "name": "driver/ride/list",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = JSON.parse(responseBody);",
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}",
                      "else",
                      "{",
                      "    console.log(\"rideid\",jsonData.list[0].id)",
                      "    pm.collectionVariables.set(\"ride_id_1\", jsonData.list[0].id);",
                      "}",
                      ""
                    ],
                    "type": "text/javascript",
                    "id": "d8798aeb-6a9c-4500-8b7c-f93c2f20c611"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "5e344068-6c44-4df6-8232-0b98b0948379"
                  }
                }
              ],
              "id": "5b77a277-64c6-4cdc-b915-935c739d2d7d",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app-reg-token}}",
                    "type": "text"
                  }
                ],
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=10",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "ride",
                    "list"
                  ],
                  "query": [
                    {
                      "key": "limit",
                      "value": "10",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "10"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-5b77a277-64c6-4cdc-b915-935c739d2d7d"
            },
            {
              "name": "driver/ride/rideId/start",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "36e08c61-4c8a-491f-aaa3-968cdd668613"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "7dc36740-f669-47c9-8356-9839c9746c22"
                  }
                }
              ],
              "id": "3ee87a1c-1092-4e49-8a51-42be6e922262",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app-reg-token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"rideOtp\": \"{{otp_1}}\",\n    \"point\": {\n        \"lat\": 16.82541868,\n        \"lon\": 75.71572701\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/start",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "ride",
                    ":rideId",
                    "start"
                  ],
                  "variable": [
                    {
                      "id": "26c6f5a7-7d87-4625-9343-2cc59febdcc3",
                      "key": "rideId",
                      "value": "{{ride_id_1}}"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-3ee87a1c-1092-4e49-8a51-42be6e922262"
            },
            {
              "name": "driver/ride/rideId/end",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "e871522a-0ea1-4d95-9430-916a961b60a5"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "e383699f-13cc-4358-bef0-b254156c7e0e"
                  }
                }
              ],
              "id": "5860bba4-9e42-47ca-a193-68baa17b9174",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app-reg-token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"point\": {\n        \"lat\": 16.82773467,\n        \"lon\": 75.72853175\n    }\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/end",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "ride",
                    ":rideId",
                    "end"
                  ],
                  "variable": [
                    {
                      "id": "3b52f67d-afc7-4a51-8351-b3af33c97836",
                      "key": "rideId",
                      "value": "{{ride_id_1}}"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-5860bba4-9e42-47ca-a193-68baa17b9174"
            },
            {
              "name": "/driver/ride/:rideId/cancel 1",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "edaa6151-9cbd-4a68-8d6c-30e4dbea106b"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "c0b15e98-4053-4a22-9c54-3597b36f167c"
                  }
                }
              ],
              "id": "7e37824d-0b92-4713-a522-30e67dfe3602",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "token",
                    "value": "{{app_reg_token}}",
                    "type": "text"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"reasonCode\": \"aliquip\",\n    \"additionalInfo\": \"nostrud dolore dolor occaecat esse\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/cancel",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "ride",
                    ":rideId",
                    "cancel"
                  ],
                  "variable": [
                    {
                      "id": "19fde4ff-cf39-4ae6-9160-266a85d5376d",
                      "key": "rideId",
                      "value": "{{ride_id_1}}"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-7e37824d-0b92-4713-a522-30e67dfe3602"
            },
            {
              "name": "/v2/rideBooking/:bookingId/cancel",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "f8781496-bed3-4d7f-bfe7-8922d5493832"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "2c378b95-05fb-4571-8e45-4bb8167ec38f"
                  }
                }
              ],
              "id": "97877158-ebd8-4eca-9fcd-3d2299500247",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{user-reg-token-intel}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    },
                    {
                      "key": "in",
                      "value": "header",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n    \"additionalInfo\": \"By Mistake\",\n    \"reasonCode\": \"By Mistake By Mistake\",\n    \"reasonStage\": \"OnSearch\"\n}\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl_app}}/rideBooking/:bookingId/cancel",
                  "host": [
                    "{{baseUrl_app}}"
                  ],
                  "path": [
                    "rideBooking",
                    ":bookingId",
                    "cancel"
                  ],
                  "variable": [
                    {
                      "id": "38a7f936-5ee8-4af4-b362-8127a46cb4e5",
                      "key": "bookingId",
                      "value": "{{curr_app_bookingId_1}}"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-97877158-ebd8-4eca-9fcd-3d2299500247"
            },
            {
              "name": "/driver/setActivity 1 offline",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Verified whether status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "if (responseCode.code !== 200) ",
                      "{",
                      "    postman.setNextRequest(null);",
                      "}"
                    ],
                    "type": "text/javascript",
                    "id": "e597bef5-a5ee-4cf3-9a30-9adaed3578d6"
                  }
                },
                {
                  "listen": "prerequest",
                  "script": {
                    "exec": [
                      "setTimeout(function(){},1000)"
                    ],
                    "type": "text/javascript",
                    "id": "e01f0c8f-be95-4beb-9a68-8ae4d67bf2a2"
                  }
                }
              ],
              "id": "c5b08fbe-98a7-4c5d-ad38-a190f88972fb",
              "protocolProfileBehavior": {
                "disableBodyPruning": true
              },
              "request": {
                "auth": {
                  "type": "apikey",
                  "apikey": [
                    {
                      "key": "value",
                      "value": "{{curr_token_1}}",
                      "type": "string"
                    },
                    {
                      "key": "key",
                      "value": "token",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json;charset=utf-8"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "\n",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseURL_namma_P}}/driver/setActivity?active=false",
                  "host": [
                    "{{baseURL_namma_P}}"
                  ],
                  "path": [
                    "driver",
                    "setActivity"
                  ],
                  "query": [
                    {
                      "key": "active",
                      "value": "false"
                    }
                  ]
                }
              },
              "response": [],
              "uid": "38579165-c5b08fbe-98a7-4c5d-ad38-a190f88972fb"
            }
          ],
          "id": "1e0d9ab3-e7f7-4dfe-897e-646bc0baedd0",
          "uid": "38579165-1e0d9ab3-e7f7-4dfe-897e-646bc0baedd0"
        }
      ],
      "id": "3ac3d5dd-75df-4deb-aade-562c8198cd2c",
      "uid": "38579165-3ac3d5dd-75df-4deb-aade-562c8198cd2c"
    },
    {
      "name": "Validating the batching",
      "item": [
        {
          "name": "/auth",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Verify whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\");",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\");",
                  "let driver_authIds = pm.collectionVariables.get('driver_authIds');",
                  "",
                  "// Retrieve the array from collection variables and parse it",
                  "if (driver_authIds) ",
                  "{",
                  "    driver_authIds = JSON.parse(driver_authIds);",
                  "} ",
                  "",
                  "else ",
                  "{",
                  "    driver_authIds = [];",
                  "}",
                  "",
                  "driver_authIds.push(jsonData.authId);",
                  "",
                  "// Convert the updated array back to a JSON string",
                  "pm.collectionVariables.set(\"driver_authIds\", JSON.stringify(driver_authIds));",
                  "",
                  "// Increment initial_count",
                  "pm.collectionVariables.set(\"initial_count\", ++initial_count);",
                  "",
                  "",
                  "if (initial_count <= TotalDriverNumbers) {",
                  "    postman.setNextRequest(\"/auth\");",
                  "} ",
                  "else ",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\", 1);",
                  "    console.log(driver_authIds);",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "0642d9f4-e537-48d3-962c-863c733692be"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var initial_count = pm.collectionVariables.get(\"initial_count\");",
                  "",
                  "if (initial_count == 1) {",
                  "    pm.collectionVariables.set(\"driver_authIds\", []);",
                  "    pm.collectionVariables.set(\"driver_authIds\", JSON.stringify([]));",
                  "}",
                  "// Define the column name prefix (e.g., \"mobileNumber\")",
                  "var columnNamePrefix = \"mobileNumber\";",
                  "",
                  "// Access the value from the dynamic column using the initial_count",
                  "var columnName = columnNamePrefix + initial_count;",
                  "var mobileNumber = data[columnName];",
                  "console.log(mobileNumber)",
                  "",
                  "pm.variables.set(\"driver_number\", mobileNumber);",
                  "",
                  "",
                  "setTimeout(function () {}, 500);",
                  ""
                ],
                "type": "text/javascript",
                "id": "03948439-94ac-4e0c-85da-a50a85d8a573"
              }
            }
          ],
          "id": "9308cc33-b9b0-46c7-8f7b-69c14c824ba4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\",\n     \"merchantOperatingCity\": \"Bangalore\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-9308cc33-b9b0-46c7-8f7b-69c14c824ba4"
        },
        {
          "name": "/auth/:authId/verify driver",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Verify whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\");",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\");",
                  "let driver_tokens = pm.collectionVariables.get('driver_tokens');",
                  "",
                  "// Retrieve the array from collection variables and parse it",
                  "",
                  "",
                  "",
                  "if (driver_tokens) ",
                  "{",
                  "    driver_tokens = JSON.parse(driver_tokens);",
                  "} ",
                  "",
                  "else ",
                  "{",
                  "    driver_tokens = [];",
                  "}",
                  "",
                  "driver_tokens.push(jsonData.token);",
                  "",
                  "// Convert the updated array back to a JSON string",
                  "pm.collectionVariables.set(\"driver_tokens\", JSON.stringify(driver_tokens));",
                  "",
                  "",
                  "// Increment initial_count",
                  "pm.collectionVariables.set(\"initial_count\", ++initial_count);",
                  "console.log(initial_count);",
                  "",
                  "if (initial_count <= TotalDriverNumbers) {",
                  "    postman.setNextRequest(\"/auth/:authId/verify driver\");",
                  "} ",
                  "else ",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\", 1);",
                  "    console.log(driver_tokens);",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "b340eb84-8aec-4b68-921c-8af3ff3ee3b9"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_authIds = JSON.parse(pm.collectionVariables.get(\"driver_authIds\"))",
                  "",
                  "pm.variables.set(\"driver_authId\",driver_authIds[initial_count-1])",
                  "",
                  "if(initial_count===1)",
                  "{",
                  "    pm.collectionVariables.set(\"driver_tokens\", JSON.stringify([]));",
                  "}",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "597a8af5-fae1-4b18-9fff-19399735de42"
              }
            }
          ],
          "id": "d6e81c27-5ab4-48c8-8810-0fc6b015a33a",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\": \"7891\",\n    \"deviceToken\": \"5497873d-10ca-42f3-8a32-22de4c916026\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "6b5c7246-c666-4a43-b1e1-65d182ae906e",
                  "key": "authId",
                  "value": "{{driver_authId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-d6e81c27-5ab4-48c8-8810-0fc6b015a33a"
        },
        {
          "name": "/driver/location",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\");",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/location\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "12a8fdbe-7251-46d4-8d2c-c6b3a56907a3"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\");",
                  "",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "var LatColumnNamePrefix = \"lat_D\";",
                  "var LonColumnNamePrefix = \"lon_D\"",
                  "",
                  "// Access the value from the dynamic column using the initial_count",
                  "var driver_lat = data[LatColumnNamePrefix + initial_count]",
                  "var driver_lon = data[LonColumnNamePrefix + initial_count]",
                  "",
                  "pm.variables.set(\"driver_lat\", driver_lat)",
                  "pm.variables.set(\"driver_lon\", driver_lon)",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "132a33bb-2838-4ba2-97e5-df58145487e3"
              }
            }
          ],
          "id": "22ca09ec-4ccc-46ab-86b0-b6ceff2e22fb",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-22ca09ec-4ccc-46ab-86b0-b6ceff2e22fb"
        },
        {
          "name": "/driver/setActivity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\");",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/setActivity\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "1ff67bdf-3d3a-43ba-8397-ef16ca4a1f08"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var active = [true,true]",
                  "var mode = [\"SILENT\",\"SILENT\",\"ONLINE\",\"ONLINE\",\"ONLINE\",\"SILENT\",\"SILENT\",\"SILENT\",\"SILENT\",\"SILENT\",\"ONLINE\",\"ONLINE\"]",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "pm.variables.set(\"activity_status\",active[initial_count-1])",
                  "pm.variables.set(\"mode\",mode[initial_count-1])",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "d01273f3-12b1-42bc-b575-30aa419106fd"
              }
            }
          ],
          "id": "caa7bfc4-4b16-447b-bc1f-cc59aeaf37f2",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"{{mode}}\"",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "setActivity"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "true"
                },
                {
                  "key": "mode",
                  "value": "\"{{mode}}\""
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-caa7bfc4-4b16-447b-bc1f-cc59aeaf37f2"
        },
        {
          "name": "/driver/profile",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "67d085cf-756e-482a-adb0-210aa97fbc60"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/profile\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "a018031b-070f-4f99-9a9d-a3d2028b2daa"
              }
            }
          ],
          "id": "f2bfac00-cba6-4133-b58f-28299c5e3914",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "60819053-f00e-4993-bbde-df2669b3c0db"
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/profile",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "profile"
              ]
            }
          },
          "response": [],
          "uid": "38579165-f2bfac00-cba6-4133-b58f-28299c5e3914"
        },
        {
          "name": "/customerauth.",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"customer_authId\", jsonData.authId);",
                  ""
                ],
                "type": "text/javascript",
                "id": "d43f2fea-16a5-4fcf-8a00-c1e30781b7b5"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)",
                  "pm.variables.set(\"user_mob_number\",9887744940)",
                  "pm.variables.set(\"merchantId\",\"NAMMA_YATRI\")",
                  ""
                ],
                "type": "text/javascript",
                "id": "a86712b8-8d86-4e76-8adf-25edfcc4f388"
              }
            }
          ],
          "id": "1cb54601-45fa-436d-8ed3-4467d79cde4d",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"mobileNumber\": \"{{user_mob_number}}\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\" : \"{{merchantId}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth"
              ]
            }
          },
          "response": [],
          "uid": "38579165-1cb54601-45fa-436d-8ed3-4467d79cde4d"
        },
        {
          "name": "/auth/:authId/verify.",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.collectionVariables.set(\"customer_Token\", jsonData.token);"
                ],
                "type": "text/javascript",
                "id": "8645cdfd-9abf-4c22-b40d-ecd7d7e4d3cc"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "id": "f83099fa-bbf5-4403-8e0e-7f1a7e18b22f"
              }
            }
          ],
          "id": "9ada841e-4c5d-49ee-856d-5c0b81a5f0f4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"otp\": \"7891\",\n    \"deviceToken\": \"9e83b4uc-00a1-9306-b90d-2345f3050972\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/auth/:authId/verify",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "auth",
                ":authId",
                "verify"
              ],
              "variable": [
                {
                  "id": "1747a9dd-3332-46ab-9e7a-ef3608e6f246",
                  "key": "authId",
                  "value": "{{customer_authId}}",
                  "description": "(Required) "
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-9ada841e-4c5d-49ee-856d-5c0b81a5f0f4"
        },
        {
          "name": "/driver/locationUpdate",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\");",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "063b3717-adcb-41e4-b7cb-757c086f6da7"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\");",
                  "",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "var LatColumnNamePrefix = \"lat_D\";",
                  "var LonColumnNamePrefix = \"lon_D\"",
                  "",
                  "// Access the value from the dynamic column using the initial_count",
                  "var driver_lat = data[LatColumnNamePrefix + initial_count]",
                  "var driver_lon = data[LonColumnNamePrefix + initial_count]",
                  "",
                  "pm.variables.set(\"driver_lat\", driver_lat)",
                  "pm.variables.set(\"driver_lon\", driver_lon)",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "8b7ce7bb-c854-4de0-9250-7b6a89376a46"
              }
            }
          ],
          "id": "1e540b10-8202-483f-9c8f-2316c3e711b0",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-1e540b10-8202-483f-9c8f-2316c3e711b0"
        },
        {
          "name": "/rideSearch",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "const body = JSON.parse(responseBody);",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "pm.collectionVariables.set(\"ride_searchId\", body.searchId);",
                  "",
                  "",
                  " "
                ],
                "type": "text/javascript",
                "id": "3dd1ca34-785a-4abf-86f0-aa4c92583b46"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "id": "66b189ba-1be0-4f72-a3bf-9f31ce99d701"
              }
            }
          ],
          "id": "b4bee723-c600-48ab-b188-b5b2114d9a9c",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{customer_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"fareProductType\": \"ONE_WAY\",\n    \"contents\": {\n        \"origin\": {\n            \"address\": {\n                \"area\": \"8th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Buildings\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\": {{user_Lat}},\n                \"lon\": {{user_Lon}}\n            }\n        },\n        \"destination\": {\n            \"address\": {\n                \"area\": \"6th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Apartments\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\": {{destination_Lat}},\n                \"lon\": {{destination_Lon}}\n            }\n        }\n    }\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch"
              ]
            }
          },
          "response": [],
          "uid": "38579165-b4bee723-c600-48ab-b188-b5b2114d9a9c"
        },
        {
          "name": "/rideSearch/:searchId/results",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "if(jsonData.estimates.length===0)",
                  "{",
                  "    postman.setNextRequest(\"/rideSearch\")",
                  "}",
                  "else",
                  "{ pm.collectionVariables.set(\"ride_estimateid\", jsonData.estimates[0].id);",
                  "}"
                ],
                "type": "text/javascript",
                "id": "2a28bc7b-0778-4ed0-8ed1-617cc3ca84ba"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},2000)"
                ],
                "type": "text/javascript",
                "id": "7287084b-5358-4da3-84ad-ab03862cb4d9"
              }
            }
          ],
          "id": "25db6480-6b97-47c0-81be-b5fc04c66018",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{customer_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "rideSearch",
                ":searchId",
                "results"
              ],
              "variable": [
                {
                  "id": "cfcac948-ae56-416e-b4cf-9236554c5551",
                  "key": "searchId",
                  "value": "{{ride_searchId}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-25db6480-6b97-47c0-81be-b5fc04c66018"
        },
        {
          "name": "/estimate/:estimateId/select",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript",
                "id": "4dcb6802-07f1-4716-80ee-b9c03e840a0c"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "setTimeout(function(){},1000)"
                ],
                "type": "text/javascript",
                "id": "d19c526a-2521-4ab5-81f2-4774c18fee44"
              }
            }
          ],
          "id": "da301761-3056-44f6-b147-0c4bd0b7f5d4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{customer_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"customerExtraFee\": null,\n  \"autoAssignEnabledV2\": false,\n  \"autoAssignEnabled\": false\n}\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl_app}}/estimate/:estimateId/select2",
              "host": [
                "{{baseUrl_app}}"
              ],
              "path": [
                "estimate",
                ":estimateId",
                "select2"
              ],
              "variable": [
                {
                  "id": "0a3dabc1-f06d-4011-ab22-c57a5033a33d",
                  "key": "estimateId",
                  "value": "{{ride_estimateid}}"
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-da301761-3056-44f6-b147-0c4bd0b7f5d4"
        },
        {
          "name": "/driver/locationUpdate/3",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/3\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "79bec5a1-1482-4d74-a2fc-e3d4cd7e999b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "7123c5f6-7928-4e42-8f16-3c61d0f99182"
              }
            }
          ],
          "id": "e7d2c9ef-cc37-4788-ba6b-7dd794aea8be",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-e7d2c9ef-cc37-4788-ba6b-7dd794aea8be"
        },
        {
          "name": "/driver/nearbyRideRequest [b1]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "var batch_1 = pm.collectionVariables.get(\"batch_1\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 1\")",
                  "    var result = batch_1.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_1\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_1.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_1\",result)",
                  "}",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b1]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "bff3932c-b0fa-41b0-bb32-a385bd587d3e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"first_batch_hold_duration\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_1\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "fb933646-cb26-41c7-8207-f1d5e2bc5b4e"
              }
            }
          ],
          "id": "61054632-2568-41bb-86f7-5c93b7dbd792",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-61054632-2568-41bb-86f7-5c93b7dbd792"
        },
        {
          "name": "/driver/locationUpdate/4",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/4\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "a021156a-fee8-4f3a-9c6a-c5b3648dc16b"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "0a773655-ccac-49cc-ba5a-9820f240b790"
              }
            }
          ],
          "id": "b29a7823-a58e-4fca-adfb-cdeda7ef464e",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-b29a7823-a58e-4fca-adfb-cdeda7ef464e"
        },
        {
          "name": "/driver/nearbyRideRequest [b2]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "var batch_2 = pm.collectionVariables.get(\"batch_2\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 2\")",
                  "    var result = batch_2.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_2\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_2.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_2\",result)",
                  "}",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b2]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "d518965b-1cc3-4749-89ee-921235827d9e"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_2\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "621b2c04-f24c-4c4e-8824-182d7a2e233c"
              }
            }
          ],
          "id": "f685737f-8988-4592-8bda-178475eb8107",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-f685737f-8988-4592-8bda-178475eb8107"
        },
        {
          "name": "/driver/locationUpdate/1",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/1\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "2be5b999-6326-456c-933a-68c1e49cd9b6"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "bdee6c00-eb2c-44db-a8cf-5921a0c10a49"
              }
            }
          ],
          "id": "9bbe535d-af8e-4858-8b58-ce764445ea14",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-9bbe535d-af8e-4858-8b58-ce764445ea14"
        },
        {
          "name": "/driver/nearbyRideRequest [b3]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "var batch_3 = pm.collectionVariables.get(\"batch_3\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 3\")",
                  "    var result = batch_3.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_3\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_3.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_3\",result)",
                  "}",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b3]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "28a6d3ba-25bf-4c87-a64d-c6e87f9e0bdd"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_3\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "a32df11d-b593-409c-9360-1570a93e6a55"
              }
            }
          ],
          "id": "c500946d-c0ad-4f27-b0dd-9360597042b7",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-c500946d-c0ad-4f27-b0dd-9360597042b7"
        },
        {
          "name": "/driver/locationUpdate/5",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/5\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "95253ac9-a60a-4e59-9fe4-7646a6e504ad"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "a7bf4a9e-11dc-4dd7-abd1-536dd3df0e5c"
              }
            }
          ],
          "id": "b12df7d6-6ac5-4035-b36b-b4d0dfcc0ee4",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-b12df7d6-6ac5-4035-b36b-b4d0dfcc0ee4"
        },
        {
          "name": "/driver/nearbyRideRequest [b4]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "var batch_4 = pm.collectionVariables.get(\"batch_4\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 4\")",
                  "    var result = batch_4.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_4\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_4.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_4\",result)",
                  "}",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b4]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "f24c2023-301c-4ae1-8a70-f5bc0c5fe816"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_4\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "6bb746ce-aeee-40a2-8cce-bbe5e8387262"
              }
            }
          ],
          "id": "6b068716-a7e3-456c-b3f5-58440c071238",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-6b068716-a7e3-456c-b3f5-58440c071238"
        },
        {
          "name": "/driver/locationUpdate/2",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/locationUpdate/2\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "ad344197-8459-4c2c-9585-0929640bac6a"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var lat = JSON.parse(pm.collectionVariables.get(\"driversLat\"));",
                  "var lon = JSON.parse(pm.collectionVariables.get(\"driversLon\"));",
                  "",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "pm.variables.set(\"driver_Token\", driver_tokens[initial_count-1])",
                  "",
                  "pm.variables.set({",
                  "    \"driver_lat\": lat[initial_count-1],",
                  "    \"driver_lon\": lon[initial_count-1]",
                  "});",
                  "",
                  "",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "2ead6a77-c808-4b2e-a65e-5e97e3c13852"
              }
            }
          ],
          "id": "f5634834-3e94-4db4-be38-6ee6ececa0a9",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              },
              {
                "key": "vt",
                "value": "AUTO_RICKSHAW",
                "type": "text"
              },
              {
                "key": "mId",
                "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
                "type": "text"
              },
              {
                "key": "dm",
                "value": "ONLINE",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "[\n    {\n        \"pt\": {\n            \"lat\": {{driver_lat}},\n            \"lon\": {{driver_lon}}\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/location",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "location"
              ]
            }
          },
          "response": [],
          "uid": "38579165-f5634834-3e94-4db4-be38-6ee6ececa0a9"
        },
        {
          "name": "/driver/nearbyRideRequest [b5]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "var batch_5 = pm.collectionVariables.get(\"batch_5\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 5\")",
                  "    var result = batch_5.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_5\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_5.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_5\",result)",
                  "}",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b5]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "31bfe661-91f0-4092-a548-cb57c822e02d"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "    setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_5\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "bbaafe4b-1df3-473f-8f24-248e9ab36c0f"
              }
            }
          ],
          "id": "46c595b4-3721-44b5-a79e-1d9945fed87f",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-46c595b4-3721-44b5-a79e-1d9945fed87f"
        },
        {
          "name": "/driver/nearbyRideRequest [b6]",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var TotalDriverNumbers = pm.collectionVariables.get(\"TotalDriverNumbers\")",
                  "var batch_6 = pm.collectionVariables.get(\"batch_6\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(jsonData.searchRequestsForDriver.length > 0)",
                  "{",
                  "    console.log(\"Driver \"+(initial_count-1)+\" received in batch 6\")",
                  "    var result = batch_6.concat(\"1\")",
                  "    pm.collectionVariables.set(\"batch_6\",result)",
                  "}",
                  "else",
                  "{",
                  "    var result = batch_6.concat(\"0\")",
                  "    pm.collectionVariables.set(\"batch_6\",result)",
                  "}",
                  "",
                  "if(initial_count<=TotalDriverNumbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/nearbyRideRequest [b6]\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "    for(i=0; i<TotalDriverNumbers;i++){",
                  "        console.log(\"Batch \"+(i+1)+\" = \",pm.collectionVariables.get(\"batch_\"+(i+1)))",
                  "    }",
                  "}",
                  "",
                  "",
                  ""
                ],
                "type": "text/javascript",
                "id": "8b664e1c-1699-40c6-b8c8-b91a4eb7a749"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var moment = require('moment');",
                  "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "var wait_duration = Number(pm.collectionVariables.get(\"delay_between_batches\"))",
                  "",
                  "",
                  "if(initial_count==1)",
                  "{",
                  "   //setTimeout(function(){},wait_duration)",
                  "    pm.collectionVariables.set(\"batch_6\",[])",
                  "}",
                  ""
                ],
                "type": "text/javascript",
                "id": "e6a3a233-9c42-4b3f-b775-f3538a567a5f"
              }
            }
          ],
          "id": "7efca30a-82be-40d8-a983-a6dd2ad3f299",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                },
                {
                  "key": "in",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "token",
                "value": "{{app-reg-token}}",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "nearbyRideRequest"
              ]
            }
          },
          "response": [],
          "uid": "38579165-7efca30a-82be-40d8-a983-a6dd2ad3f299"
        },
        {
          "name": "/driver/setActivity?active=false",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = JSON.parse(responseBody);",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "",
                  "pm.test(\"Verified whether Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.collectionVariables.set(\"initial_count\",++initial_count)",
                  "",
                  "if(initial_count<=total_numbers)",
                  "{",
                  "postman.setNextRequest(\"/driver/setActivity?active=false\")",
                  "}",
                  "else",
                  "{",
                  "    pm.collectionVariables.set(\"initial_count\",1)",
                  "}"
                ],
                "type": "text/javascript",
                "id": "0f6d37e2-936a-4e2c-8259-219964afd000"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var active = [true,true]",
                  "var mode = [\"ONLINE\",\"ONLINE\"]",
                  "",
                  "var initial_count = pm.collectionVariables.get(\"initial_count\")",
                  "var total_numbers = pm.collectionVariables.get(\"total_numbers\")",
                  "let driver_tokens = JSON.parse(pm.collectionVariables.get(\"driver_tokens\"))",
                  "",
                  "",
                  "pm.variables.set(\"activity_status\",active[initial_count-1])",
                  "pm.variables.set(\"mode\",mode[initial_count-1])",
                  "pm.variables.set(\"driver_Token\",driver_tokens[initial_count-1])",
                  "setTimeout(function(){},500)"
                ],
                "type": "text/javascript",
                "id": "a27534f0-3c80-48b1-8154-53f3e1c50880"
              }
            }
          ],
          "id": "1c49cd70-838d-4f3b-b81d-21a332e47082",
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          },
          "request": {
            "auth": {
              "type": "apikey",
              "apikey": [
                {
                  "key": "value",
                  "value": "{{driver_Token}}",
                  "type": "string"
                },
                {
                  "key": "key",
                  "value": "token",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json;charset=utf-8"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "\n",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseURL_namma_P}}/driver/setActivity?active=false&mode=\"OFFLINE\"",
              "host": [
                "{{baseURL_namma_P}}"
              ],
              "path": [
                "driver",
                "setActivity"
              ],
              "query": [
                {
                  "key": "active",
                  "value": "false"
                },
                {
                  "key": "mode",
                  "value": "\"OFFLINE\""
                }
              ]
            }
          },
          "response": [],
          "uid": "38579165-1c49cd70-838d-4f3b-b81d-21a332e47082"
        }
      ],
      "id": "c0262ff6-5fe5-4519-b63e-c5d502315115",
      "uid": "38579165-c0262ff6-5fe5-4519-b63e-c5d502315115"
    }
  ],
  "auth": {
    "type": "apikey",
    "apikey": [
      {
        "key": "value",
        "value": "{{app-reg-token}}",
        "type": "string"
      },
      {
        "key": "key",
        "value": "token",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "93ffb2d9-1a52-4d47-b37e-8b7a5083f931"
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "1acb02ad-06d2-40cb-ab5d-28f214f86964"
      }
    }
  ],
  "variable": [
    {
      "key": "initial_count",
      "value": "1",
      "type": "string"
    },
    {
      "key": "total_numbers",
      "value": "",
      "type": "string"
    },
    {
      "key": "TotalDriverNumbers",
      "value": "12",
      "type": "string"
    },
    {
      "key": "first_batch_hold_duration",
      "value": "18000",
      "type": "string"
    },
    {
      "key": "delay_between_batches",
      "value": "27000",
      "type": "string"
    },
    {
      "key": "driver_tokens",
      "value": ""
    },
    {
      "key": "customer_authId",
      "value": ""
    },
    {
      "key": "ride_searchId",
      "value": ""
    },
    {
      "key": "customer_Token",
      "value": ""
    },
    {
      "key": "ride_estimateid",
      "value": ""
    },
    {
      "key": "curr_driver_authId",
      "value": ""
    },
    {
      "key": "curr_token",
      "value": ""
    },
    {
      "key": "rider_token",
      "value": ""
    },
    {
      "key": "searchId",
      "value": ""
    },
    {
      "key": "curr_rider_authId",
      "value": ""
    },
    {
      "key": "app-reg-token",
      "value": ""
    },
    {
      "key": "curr_estimateid",
      "value": ""
    },
    {
      "key": "batch_1",
      "value": "",
      "type": "string"
    },
    {
      "key": "batch_2",
      "value": "",
      "type": "string"
    },
    {
      "key": "batch_3",
      "value": "",
      "type": "string"
    },
    {
      "key": "batch_4",
      "value": "",
      "type": "string"
    },
    {
      "key": "batch_5",
      "value": "",
      "type": "string"
    },
    {
      "key": "batch_6",
      "value": "",
      "type": "string"
    },
    {
      "key": "driversLat",
      "value": ""
    },
    {
      "key": "driversLon",
      "value": ""
    },
    {
      "key": "customerAuthId",
      "value": ""
    },
    {
      "key": "driver_authIds",
      "value": ""
    },
    {
      "key": "curr_rider_authId_1",
      "value": ""
    },
    {
      "key": "curr_token_1",
      "value": ""
    },
    {
      "key": "driver_1_id",
      "value": ""
    },
    {
      "key": "user_auth_id_intel",
      "value": ""
    },
    {
      "key": "user-reg-token-intel",
      "value": ""
    },
    {
      "key": "user_intel_searchId",
      "value": ""
    },
    {
      "key": "user_intel_estimateId",
      "value": ""
    },
    {
      "key": "accept_searchId_1",
      "value": ""
    },
    {
      "key": "quoteIdnew",
      "value": ""
    },
    {
      "key": "curr_app_bookingId_1",
      "value": ""
    },
    {
      "key": "otp_1",
      "value": ""
    },
    {
      "key": "ride_id_1",
      "value": ""
    },
    {
      "key": "driver_numbers",
      "value": ""
    },
    {
      "key": "customerNumbers",
      "value": ""
    },
    {
      "key": "customerNumbersCount",
      "value": ""
    },
    {
      "key": "customerAuthIds",
      "value": ""
    },
    {
      "key": "customerTokens",
      "value": ""
    },
    {
      "key": "EstiHatch",
      "value": ""
    },
    {
      "key": "EstiTaxi",
      "value": ""
    },
    {
      "key": "EstiAuto",
      "value": ""
    },
    {
      "key": "EstiSedan",
      "value": ""
    },
    {
      "key": "Estisuv",
      "value": ""
    }
  ]
}