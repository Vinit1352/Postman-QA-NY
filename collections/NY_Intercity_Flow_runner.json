{
  "info": {
    "_postman_id": "758ecd07-cde6-4583-a05a-044d9df96bf4",
    "name": "NY Intercity Flow runner",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "updatedAt": "2025-04-01T09:26:41.000Z",
    "createdAt": "2024-12-24T07:38:24.000Z",
    "lastUpdatedBy": "40603215",
    "uid": "38579165-758ecd07-cde6-4583-a05a-044d9df96bf4"
  },
  "item": [
    {
      "name": "Drivernumber",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "4bac5e1b-6743-4010-a16f-1b99946fd756",
            "exec": [
              "pm.collectionVariables.set(\"driver_number\", 9876544449)",
              "pm.collectionVariables.set(\"rideStarted\", false)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "422134e9-48a2-4438-bec5-e75929b88d4a",
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.collectionVariables.set(\"rider_authId\", responseBody.authId);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "95655d04-8d85-4b84-9087-fbb1022b71c5",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-95655d04-8d85-4b84-9087-fbb1022b71c5"
    },
    {
      "name": "DriverOTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "e436de3c-d84c-4822-beac-b429c4b171c0",
            "exec": [
              "// var response = JSON.parse(responseBody);",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Token is not null\", function() {",
              "    pm.expect(responseBody.token).to.be.not.eql(null)",
              "})",
              "",
              "",
              "",
              "pm.collectionVariables.set(\"rider_token\", responseBody.token);",
              "pm.collectionVariables.set(\"driver_id\", responseBody.person.id)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "3ab23177-9a5e-42b0-ab14-68d96d47c39c",
            "exec": [
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "24464b26-7bf7-4f2d-a674-a54d3c6352af",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"5481873d-10ca-42f3-8a32-22de4c916026\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "key": "authId",
              "value": "{{rider_authId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-24464b26-7bf7-4f2d-a674-a54d3c6352af"
    },
    {
      "name": "Driverlocation",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "4c221957-7752-410f-9ab2-5b2a9543febd",
            "exec": [
              "var moment = require('moment');",
              "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
              "",
              "setTimeout(function(){},2000)",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "aae54397-7466-4bd2-bd46-d25e4f5e73d2",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "820bff73-3426-4e49-aefb-54782f2893bc",
      "protocolProfileBehavior": {
        "disabledSystemHeaders": {},
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Typevi",
            "value": "application/json;charset=utf-8",
            "disabled": true
          },
          {
            "key": "mId",
            "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f"
          },
          {
            "key": "vt",
            "value": "HATCHBACK"
          },
          {
            "key": "dm",
            "value": "ONLINE"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "[\n    {\n        \"pt\": {\n            \"lat\":12.9716,\n            \"lon\":77.5946\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n]\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/location",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "location"
          ]
        }
      },
      "response": [],
      "uid": "38579165-820bff73-3426-4e49-aefb-54782f2893bc"
    },
    {
      "name": "Driversetactivity",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "6a8890ce-7469-4e24-a2a0-a1b55e5c4f5d"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "349b3214-2a12-4778-a84d-90e135a5b93c"
          }
        }
      ],
      "id": "7f0bd630-e768-441a-adeb-4c09beeddf55",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "\n\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "setActivity"
          ],
          "query": [
            {
              "key": "active",
              "value": "true"
            },
            {
              "key": "mode",
              "value": "\"ONLINE\""
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-7f0bd630-e768-441a-adeb-4c09beeddf55"
    },
    {
      "name": "Driverprofile",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "9d1db8c5-7ad1-4f03-845b-fe5a557a9192"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "8f1ee485-12c4-47f2-becb-374436d556c2"
          }
        }
      ],
      "id": "491c0829-4e6b-4317-b9f6-d062c0d8296c",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/profile",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "profile"
          ]
        }
      },
      "response": [],
      "uid": "38579165-491c0829-4e6b-4317-b9f6-d062c0d8296c"
    },
    {
      "name": "Usernumber",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ba5df278-6e71-424f-b93d-e5ac5a793696",
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "",
              "pm.collectionVariables.set(\"user_authIdId\", responseBody.authId);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "e3dcf487-8af3-40f0-bdc9-53f7e92b7417",
            "exec": [
              "pm.collectionVariables.set(\"user_number\", 7931995421)",
              "",
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "b3e8700c-e639-4e73-889a-b8e567822b0f",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\" : \"{{user_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\"\n}\n\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-b3e8700c-e639-4e73-889a-b8e567822b0f"
    },
    {
      "name": "UserOtp",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "6554e9a5-c9e2-4db3-b940-a25396326f21",
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Token is not null\", function() {",
              "    pm.expect(responseBody.token).to.be.not.eql(null)",
              "})",
              "",
              "",
              "pm.collectionVariables.set(\"curr_user_token\", responseBody.token);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "38fac4dd-9380-4190-8b5b-4381b62b8c1d",
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "4ef73a5f-1e31-4a8a-8e4d-2806018d3d93",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_authId}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"9967e5dc-99a0-4306-b90d-2345f3787822\" \n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth/:authId/verify",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "key": "authId",
              "value": "{{user_authIdId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-4ef73a5f-1e31-4a8a-8e4d-2806018d3d93"
    },
    {
      "name": "RideSearch",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "4fcda329-5ba4-4e94-a78b-b60c84fe78ab",
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              " pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.collectionVariables.set(\"curr_searchId\", responseBody.searchId);",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "665b78ef-8015-4a37-92a3-e4bc34e13bf2",
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "22f3d119-bab1-48ff-9ca6-8830308749e2",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"fareProductType\": \"ONE_WAY\",\n    \"contents\": {\n        \"origin\": {\n            \"address\": {\n                \"area\": \"8th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Buildings\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n             \"lat\":12.9716,\n            \"lon\":77.5946\n            }\n        },\n        \"autoAssignEnabledV2\": true,\n        \"autoAssignEnabled\": true,\n        \"destination\": {\n            \"address\": {\n                \"area\": \"6th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Apartments\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\":13.3379, \n                \"lon\":77.1173\n            }\n        }\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch"
          ]
        }
      },
      "response": [],
      "uid": "38579165-22f3d119-bab1-48ff-9ca6-8830308749e2"
    },
    {
      "name": "SearchIdResults",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "var quoteslen = jsonData.quotes.length;",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "for (var i = 0; i < quoteslen; i++ )",
              "{   ",
              "    if ((jsonData.quotes[i].onDemandCab.agencyName=== \"Namma Yatri\") && (jsonData.quotes[i].onDemandCab.serviceTierName === \"Sedan\") )",
              "",
              "pm.collectionVariables.set(\"EstiSedan\", jsonData.quotes[i].onDemandCab.id);",
              "",
              "console.log(jsonData.quotes[i].onDemandCab.id + \"EstiSedan\")",
              "}",
              "",
              "",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "450f16f8-5435-4e57-ac38-325cac833399"
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},4000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "e88d0ba2-e2a3-4ffd-b4f4-63ad3f20468d"
          }
        }
      ],
      "id": "4a0fdbd3-29c4-4678-9c5b-e00dbd6c0463",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "token",
            "value": "{{curr_user_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch",
            ":searchId",
            "results"
          ],
          "variable": [
            {
              "id": "f9c88fce-72bb-4434-9ad3-5f29d7c535a5",
              "key": "searchId",
              "value": "{{curr_searchId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-4a0fdbd3-29c4-4678-9c5b-e00dbd6c0463"
    },
    {
      "name": "/rideSearch/quotes/:quoteId/confirm",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "e82124b7-17d0-4d2b-b6da-ca82545852df",
            "exec": [
              "const body = JSON.parse(responseBody);",
              "postman.setEnvironmentVariable(\"curr_app_bookingId\", body.bookingId);",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "332c8889-6fa3-487b-b86d-d65b406791ae",
            "exec": [
              "setTimeout(function(){},4000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "83add23a-b404-4f24-8985-930fa0df17dc",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "token",
            "value": "{{app-reg-token}}"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch/quotes/:quoteId/confirm",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch",
            "quotes",
            ":quoteId",
            "confirm"
          ],
          "variable": [
            {
              "key": "quoteId",
              "value": "{{EstiSedan}}",
              "description": "(Required) "
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-83add23a-b404-4f24-8985-930fa0df17dc"
    },
    {
      "name": "nearbyRideRequest",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "36cecb88-25b3-44e8-b5f2-8acdf2e77824",
            "exec": [
              "var responseBody = pm.response.json();",
              "var nearbyRequest = responseBody.searchRequestsForDriver;",
              "var maxRetries = 4; // Maximum number of retries",
              "",
              "// Initialize or increment the retry count",
              "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
              "",
              "if (nearbyRequest && nearbyRequest.length > 0) {",
              "    // Set the searchReq_Id collection variable",
              "    pm.collectionVariables.set(\"searchReq_Id\", nearbyRequest[0].searchRequestId);",
              "    console.log(nearbyRequest[0].searchRequestId + \" searchRequestId\");",
              "",
              "    // Reset the retry count as the request was successful",
              "    pm.collectionVariables.set(\"retryCount\", 0);",
              "} else {",
              "    // Increment the retry count",
              "    retryCount++;",
              "    pm.collectionVariables.set(\"retryCount\", retryCount);",
              "",
              "    if (retryCount < maxRetries) {",
              "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
              "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
              "    } else {",
              "        console.log(`Max retries reached (${maxRetries}).`);",
              "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
              "    }",
              "}",
              "",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', pm.info.requestName);",
              "    console.log('res', responseBody);",
              "    pm.response.to.have.status(200);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "e22fee55-9181-421c-85e8-0cc5872e70a6",
            "exec": [
              "setTimeout(function(){},9000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "87649b73-41af-42b1-a8ca-2f3dbc2fd2c1",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "nearbyRideRequest"
          ]
        }
      },
      "response": [],
      "uid": "38579165-87649b73-41af-42b1-a8ca-2f3dbc2fd2c1"
    },
    {
      "name": "quoteOffer",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "console.log(pm.collectionVariables.get(\"searchReq_Id\"))",
              "setTimeout(function(){},3000)"
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "5b2d37fa-746a-4adb-a1f4-a8ec1945babf"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {},
            "id": "3abf0bb6-97d6-4738-bea6-073d3539220f"
          }
        }
      ],
      "id": "73a36bb1-1fae-4c80-979c-1d26e0a68251",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"searchRequestId\":\"{{searchReq_Id}}\"\n  //\"offeredFare\": 0\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "searchRequest",
            "quote",
            "offer"
          ]
        }
      },
      "response": [],
      "uid": "38579165-73a36bb1-1fae-4c80-979c-1d26e0a68251"
    },
    {
      "name": "driverRideList",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "ffd3b62e-7e7a-41eb-8474-ea6dc95d7e31",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.collectionVariables.set(\"DriverRide_id\", jsonData.list[0].id);",
              "console.log(pm.environment.get(\"DriverRide_id\"));",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "7dce5488-84db-4d86-b966-0d6cd73d0edd",
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "2137144f-6ae1-4897-84d1-885009eb7f14",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=1",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            "list"
          ],
          "query": [
            {
              "key": "limit",
              "value": "1"
            },
            {
              "key": "onlyActive",
              "value": "true",
              "disabled": true
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-2137144f-6ae1-4897-84d1-885009eb7f14"
    },
    {
      "name": "UserBookingList",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a6f60b5a-0fd0-4cde-b10e-972f081ae11f",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "let rideStarted= pm.collectionVariables.get(\"rideStarted\")",
              "if(rideStarted === true)",
              "{",
              "    pm.collectionVariables.set(\"intercityEndRideOtp\",jsonData.list[0].rideList[0].endOtp)",
              "    postman.setNextRequest(\"EndRide\")",
              "}",
              "else",
              "{",
              "pm.collectionVariables.set(\"startOtp\", jsonData.list[0].rideList[0].rideOtp);",
              "}",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "a6f034f0-0c5c-4532-9a5e-ab5f93320c82",
            "exec": [
              "setTimeout(function(){},2000)",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "65f939d6-d83d-423a-be0d-c78a3157a395",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl_app}}/rideBooking/list?limit=1&onlyActive=true",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideBooking",
            "list"
          ],
          "query": [
            {
              "key": "limit",
              "value": "1"
            },
            {
              "key": "onlyActive",
              "value": "true"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-65f939d6-d83d-423a-be0d-c78a3157a395"
    },
    {
      "name": "startRide",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "0ce119f4-13b3-47a1-b7b6-4b8ae12ee447",
            "exec": [
              "setTimeout(function(){},2000)",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "87801922-4de5-483f-82f2-3f20bf0adb33",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              "pm.collectionVariables.set(\"rideStarted\", true)",
              "postman.setNextRequest(\"UserBookingList\")",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "5cce52dd-c460-4b48-8b78-1c567eba402e",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"rideOtp\": \"{{startOtp}}\",\n    \"point\": {\n        \"lat\": 20.2392296,\n                \"lon\": 85.8039701\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/start",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            ":rideId",
            "start"
          ],
          "variable": [
            {
              "key": "rideId",
              "value": "{{DriverRide_id}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-5cce52dd-c460-4b48-8b78-1c567eba402e"
    },
    {
      "name": "EndRide",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "547535ef-91b5-4091-9866-e9a451d598ad",
            "exec": [
              "setTimeout(function(){},2000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "e2a05ae8-ac8f-4c7f-b5a1-76b60cbfaed2",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "f856411c-4647-4e47-980a-314666eab4a4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "\n{\n    \"rideOtp\": \"{{intercityEndRideOtp}}\",\n    \"point\": {\n                \"lat\": 13.346967382841818, \n                \"lon\": 77.10784161607415\n            }\n    }",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/end",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            ":rideId",
            "end"
          ],
          "variable": [
            {
              "key": "rideId",
              "value": "{{DriverRide_id}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-f856411c-4647-4e47-980a-314666eab4a4"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "d47fa9f0-89c2-4639-b837-73c781052365"
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ],
        "id": "015a2f88-157d-4712-a8d3-9a3168a00c73"
      }
    }
  ],
  "variable": [
    {
      "key": "driver_number",
      "value": ""
    },
    {
      "key": "user_number",
      "value": ""
    },
    {
      "key": "rider_token",
      "value": ""
    },
    {
      "key": "driver_id",
      "value": ""
    },
    {
      "key": "user_authIdId",
      "value": ""
    },
    {
      "key": "curr_searchId",
      "value": ""
    },
    {
      "key": "estimate_id",
      "value": ""
    },
    {
      "key": "searchReq_Id",
      "value": ""
    },
    {
      "key": "quote_id",
      "value": ""
    },
    {
      "key": "DriverRide_id",
      "value": ""
    },
    {
      "key": "otp",
      "value": ""
    },
    {
      "key": "curr_user_token",
      "value": ""
    },
    {
      "key": "curr_rider_authId",
      "value": ""
    },
    {
      "key": "rider_authId",
      "value": ""
    },
    {
      "key": "EstiSedan",
      "value": "",
      "type": "string"
    },
    {
      "key": "curr_estimateid",
      "value": ""
    },
    {
      "key": "EstiAuto",
      "value": "",
      "type": "string"
    },
    {
      "key": "rideStarted",
      "value": ""
    },
    {
      "key": "startOtp",
      "value": ""
    },
    {
      "key": "rideAssigned",
      "value": ""
    },
    {
      "key": "intercityEndRideOtp",
      "value": ""
    },
    {
      "key": "EstiXL",
      "value": ""
    },
    {
      "key": "retryCount",
      "value": ""
    }
  ]
}