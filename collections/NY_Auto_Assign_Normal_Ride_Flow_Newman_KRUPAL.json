{
  "info": {
    "_postman_id": "ef14ae5a-ad86-47c5-a326-06ca08642fea",
    "name": "NY Auto Assign Normal Ride Flow Newman-KRUPAL",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "updatedAt": "2025-04-07T09:47:58.000Z",
    "createdAt": "2024-12-24T07:38:23.000Z",
    "lastUpdatedBy": "38571916",
    "uid": "38579165-ef14ae5a-ad86-47c5-a326-06ca08642fea"
  },
  "item": [
    {
      "name": "Drivernumber",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "e29f6217-b443-49b8-8cea-ef571b6d859e",
            "exec": [
              "",
              "pm.collectionVariables.set(\"driver_number\", 6378299815)",
              "",
              "//916499000 ",
              " // 9098765073"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "8c9bfb40-4213-41d1-a0e7-3a04ba24ef39",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.collectionVariables.set(\"curr_rider_authId\", jsonData.authId);",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "fc95cb5e-868f-4695-8c7f-7510dba3d297",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\": \"{{driver_number}}\",\n    \"mobileCountryCode\": \"+91\",\n    \"merchantId\": \"7f7896dd-787e-4a0b-8675-e9e6fe93bb8f\",\n    \"merchantOperatingCity\": \"Bangalore\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-fc95cb5e-868f-4695-8c7f-7510dba3d297"
    },
    {
      "name": "DriverOTP",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a8fa578f-e287-4d48-ad95-920ebb7a7808",
            "exec": [
              "// var response = JSON.parse(responseBody);",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "",
              "});",
              "",
              "pm.collectionVariables.set(\"rider_token\", responseBody.token);",
              "pm.collectionVariables.set(\"driver_id\", responseBody.person.id)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "21ad6fec-dbfb-4dfe-ae5c-8f90f5f71b65",
            "exec": [
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "4216bed7-c3bf-4977-b15e-c92672025eb6",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"5497873d-10ca-42f3-8a32-22de4c916026\"\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/auth/:authId/verify",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "key": "authId",
              "value": "{{curr_rider_authId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-4216bed7-c3bf-4977-b15e-c92672025eb6"
    },
    {
      "name": "Driverlocation",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "b60609d5-3d12-4455-a9a0-256c645b3f42",
            "exec": [
              "var moment = require('moment');",
              "pm.globals.set(\"current_time\", moment.utc().format(\"YYYY-MM-DDTHH:mm:ssZ\"));",
              "",
              "setTimeout(function(){},1000)",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "4ea181e9-78e7-4b58-a2e1-f2f6d0154929",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "// var responseBody = pm.response.json()",
              "",
              "// pm.test(\"Result - Successful\", function() {",
              "",
              "//     pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "// })",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "ffe7b11c-3c30-43e1-81b3-e150ce2a0063",
      "protocolProfileBehavior": {
        "disabledSystemHeaders": {},
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json;charset=utf-8",
            "type": "text"
          },
          {
            "key": "mId",
            "value": "96dd7f78-787e-4a0b-8675-e9e6fe93bb8f",
            "type": "text",
            "disabled": true
          },
          {
            "key": "vt",
            "value": "SUV",
            "type": "text"
          },
          {
            "key": "mId",
            "value": "7f7896dd-787e-4a0b-8675-e9e6fe93bb8f",
            "type": "text"
          },
          {
            "key": "vt",
            "value": "AUTO_RICKSHAW",
            "type": "text",
            "disabled": true
          },
          {
            "key": "dm",
            "value": "ONLINE",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "[\n    {\n        \"pt\": {\n           \"lat\":13.058634713434097, \n            \"lon\":77.5570772117453\n        },\n        \"ts\": \"{{current_time}}\"\n    }\n] ",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/location",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "location"
          ]
        }
      },
      "response": [],
      "uid": "38579165-ffe7b11c-3c30-43e1-81b3-e150ce2a0063"
    },
    {
      "name": "Driversetactivity",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "2d27a918-8250-46af-8196-ace3dc8983fb",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "34c65131-0c36-46af-9f3f-01c49aabe4d9",
            "exec": [
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "b5e28bf4-6c91-47f8-8361-3c4e81554845",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "\n\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/setActivity?active=true&mode=\"ONLINE\"",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "setActivity"
          ],
          "query": [
            {
              "key": "active",
              "value": "true"
            },
            {
              "key": "mode",
              "value": "\"ONLINE\""
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-b5e28bf4-6c91-47f8-8361-3c4e81554845"
    },
    {
      "name": "Driverprofile",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "22adb67f-f271-4e7b-be6b-00a585fb4f10",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "8e5785c6-6f41-4936-8a62-e9516f50bbeb",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/profile",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "profile"
          ]
        }
      },
      "response": [],
      "uid": "38579165-8e5785c6-6f41-4936-8a62-e9516f50bbeb"
    },
    {
      "name": "Usernumber",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "59687fd2-a148-4187-bdd8-894844aa022f",
            "exec": [
              "pm.collectionVariables.set(\"user_number\", 6364040180)",
              "",
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "a0ae4801-99dc-44c2-9468-1ab32719d5b5",
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "",
              "pm.collectionVariables.set(\"user_authIdId\", responseBody.authId);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "fd69a1c4-c082-42c3-ae46-9b786b6afe57",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"mobileNumber\" : \"{{user_number}}\",\n    \"mobileCountryCode\" : \"+91\",\n    \"merchantId\" : \"NAMMA_YATRI\"\n}\n\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth"
          ]
        }
      },
      "response": [],
      "uid": "38579165-fd69a1c4-c082-42c3-ae46-9b786b6afe57"
    },
    {
      "name": "UserOtp",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "69c4497c-bc40-43cc-a80c-1bf3ba4a84c3",
            "exec": [
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "    ",
              "});",
              "",
              "",
              "pm.collectionVariables.set(\"curr_user_token\", responseBody.token);"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "2b08718e-5eb8-4ee6-a946-da801dbda1f4",
            "exec": [
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "0660f691-f450-49ef-8a7d-429ab2f19383",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_authId}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"otp\" : \"7891\",\n    \"deviceToken\" : \"9983b5dc-99a0-4306-b90d-2345f3417822\" \n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/auth/:authId/verify",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "auth",
            ":authId",
            "verify"
          ],
          "variable": [
            {
              "key": "authId",
              "value": "{{user_authIdId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-0660f691-f450-49ef-8a7d-429ab2f19383"
    },
    {
      "name": "RideSearch",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "50cf5288-5502-4da2-a109-36aeb5208703",
            "exec": [
              "var responseBody = pm.response.json()",
              "pm.collectionVariables.set(\"curr_searchId\", responseBody.searchId);",
              "",
              " pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "21bd03ef-9621-4781-bd5d-72fce3bb0761",
            "exec": [
              "setTimeout(function(){},4000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "3662dd7c-e9d7-4842-8082-d7e3777ffec0",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"fareProductType\": \"ONE_WAY\",\n    \"contents\": {\n        \"origin\": {\n            \"address\": {\n                \"area\": \"8th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Buildings\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n               \"lat\":13.05869,\n            \"lon\":77.55758\n            }\n        },\n        \"destination\": {\n            \"address\": {\n                \"area\": \"6th Block Koramangala\",\n                \"areaCode\": \"560047\",\n                \"building\": \"Juspay Apartments\",\n                \"city\": \"Bangalore\",\n                \"country\": \"India\",\n                \"door\": \"#444\",\n                \"street\": \"18th Main\",\n                \"state\": \"Karnataka\"\n            },\n            \"gps\": {\n                \"lat\":13.02188,\n            \"lon\":77.55314\n            }\n        }\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch"
          ]
        }
      },
      "response": [],
      "uid": "38579165-3662dd7c-e9d7-4842-8082-d7e3777ffec0"
    },
    {
      "name": "SearchIdResults",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "60eb7a24-6065-4e3e-a41b-48f90e5cc392",
            "exec": [
              "",
              "// setTimeout(function(){",
              "//  console.log(\"delay\");}, 4000);",
              " var jsonData = JSON.parse(responseBody);",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "    console.log('res', jsonData)",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "var estimateslen = jsonData.estimates.length;",
              "for(let i =0; i < estimateslen;i++)",
              "{",
              "if((jsonData.estimates[i].agencyName===\"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant===\"AUTO_RICKSHAW\"))",
              "{",
              "pm.collectionVariables.set(\"autoEstimateId\",jsonData.estimates[i].id);",
              "}",
              "else if((jsonData.estimates[i].agencyName===\"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant===\"SEDAN\"))",
              "{",
              "pm.collectionVariables.set(\"sedanEstimateId\",jsonData.estimates[i].id);",
              "}",
              "else if((jsonData.estimates[i].agencyName===\"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant===\"SUV\"))",
              "{",
              "pm.collectionVariables.set(\"suvEstimateId\",jsonData.estimates[i].id);",
              "}",
              "else if((jsonData.estimates[i].agencyName===\"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant===\"TAXI\"))",
              "{",
              "pm.collectionVariables.set(\"taxiEstimateId\",jsonData.estimates[i].id);",
              "}",
              "else if((jsonData.estimates[i].agencyName===\"NAMMA_YATRI\") && (jsonData.estimates[i].vehicleVariant===\"HATCHBACK\"))",
              "{",
              "pm.collectionVariables.set(\"hatchbackEstimateId\",jsonData.estimates[i].id);",
              "}",
              "}",
              "",
              "setTimeout(function(){},2000)",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "2942a077-2351-4c85-8aea-76d0eb6479b0",
            "exec": [
              "setTimeout(function(){},3000)",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "9b5ba5c0-121d-450a-8721-d8cdeb800e88",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [
          {
            "key": "token",
            "value": "{{curr_user_token}}",
            "type": "text"
          }
        ],
        "url": {
          "raw": "{{baseUrl_app}}/rideSearch/:searchId/results",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideSearch",
            ":searchId",
            "results"
          ],
          "variable": [
            {
              "key": "searchId",
              "value": "{{curr_searchId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-9b5ba5c0-121d-450a-8721-d8cdeb800e88"
    },
    {
      "name": "estimateId/select2",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "73448446-930c-4c03-887f-32e49152ec59",
            "exec": [
              "setTimeout(function(){},1500)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "93a0e51d-711a-4b62-8a87-a8fd5efc3d02",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "da53f343-327d-4e01-a675-5e3709b94a16",
      "protocolProfileBehavior": {
        "disabledSystemHeaders": {
          "": true
        },
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"customerExtraFee\": null,\n  \"autoAssignEnabledV2\": true,\n  \"autoAssignEnabled\": true\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseUrl_app}}/estimate/:estimateId/select2?autoAssignEnabledV2=true&autoAssignEnabled=",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "estimate",
            ":estimateId",
            "select2"
          ],
          "query": [
            {
              "key": "autoAssignEnabledV2",
              "value": "true"
            },
            {
              "key": "autoAssignEnabled",
              "value": ""
            }
          ],
          "variable": [
            {
              "key": "estimateId",
              "value": "{{suvEstimateId}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-da53f343-327d-4e01-a675-5e3709b94a16"
    },
    {
      "name": "nearbyRideRequest",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "c2d9b3e6-fc8f-4521-9251-37e67a525482",
            "exec": [
              "var responseBody = pm.response.json();",
              "var nearbyRequest = responseBody.searchRequestsForDriver;",
              "var maxRetries = 4; // Maximum number of retries",
              "",
              "// Initialize or increment the retry count",
              "var retryCount = pm.collectionVariables.get(\"retryCount\") || 0;",
              "",
              "if (nearbyRequest && nearbyRequest.length > 0) {",
              "    // Set the searchReq_Id collection variable",
              "    pm.collectionVariables.set(\"searchReq_Id\", nearbyRequest[0].searchRequestId);",
              "    console.log(nearbyRequest[0].searchRequestId + \" searchRequestId\");",
              "",
              "    // Reset the retry count as the request was successful",
              "    pm.collectionVariables.set(\"retryCount\", 0);",
              "} else {",
              "    // Increment the retry count",
              "    retryCount++;",
              "    pm.collectionVariables.set(\"retryCount\", retryCount);",
              "",
              "    if (retryCount < maxRetries) {",
              "        console.log(`Retrying request (${retryCount}/${maxRetries})...`);",
              "        pm.execution.setNextRequest(pm.info.requestName); // Re-run the same request",
              "    } else {",
              "        console.log(`Max retries reached (${maxRetries}).`);",
              "        pm.collectionVariables.set(\"retryCount\", 0); // Reset retry count after max retries",
              "       PostmanLegacy.setNextRequest(null)",
              "    }",
              "}",
              "",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', pm.info.requestName);",
              "    console.log('res', responseBody);",
              "    pm.response.to.have.status(200);",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "d012e082-d5f0-4b6a-92ec-f0fe3f3e00a6",
            "exec": [
              "setTimeout(function(){},7000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "1a5b9a7c-4510-4164-8504-d06f24dd3ed6",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/nearbyRideRequest",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "nearbyRideRequest"
          ]
        }
      },
      "response": [],
      "uid": "38579165-1a5b9a7c-4510-4164-8504-d06f24dd3ed6"
    },
    {
      "name": "quoteOffer",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "exec": [
              "setTimeout(function(){},1500)"
            ],
            "type": "text/javascript",
            "id": "af08356f-2a65-4243-b138-0b6979059f56"
          }
        },
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "});",
              "",
              "var responseBody = pm.response.json()",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "id": "4b2c45d7-93ae-4996-951f-aa31041fdb4c"
          }
        }
      ],
      "id": "e633bd8f-94ce-4c06-b07f-eaa631d67032",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"searchRequestId\":\"{{searchReq_Id}}\",\n  \"offeredFare\": 0\n}\n",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/searchRequest/quote/offer",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "searchRequest",
            "quote",
            "offer"
          ]
        }
      },
      "response": [],
      "uid": "38579165-e633bd8f-94ce-4c06-b07f-eaa631d67032"
    },
    {
      "name": "driverRideList",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "d00e60c7-3d2f-4afd-8076-8c3f48327e43",
            "exec": [
              "var jsonData = JSON.parse(responseBody);",
              "",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "});",
              "",
              "pm.collectionVariables.set(\"DriverRide_id\", jsonData.list[0].id);",
              "console.log(pm.environment.get(\"DriverRide_id\"));",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "3e7d7a79-80f3-492c-8212-f5cf1705f947",
            "exec": [
              "setTimeout(function(){},1500)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "ac6525c1-0e3c-4a65-baed-5afe9fdf863f",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/list?limit=1&onlyActive=true",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            "list"
          ],
          "query": [
            {
              "key": "limit",
              "value": "1"
            },
            {
              "key": "onlyActive",
              "value": "true"
            },
            {
              "key": "status",
              "value": "\"CANCELLED\"",
              "disabled": true
            },
            {
              "key": "day",
              "value": "2023-10-04",
              "disabled": true
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-ac6525c1-0e3c-4a65-baed-5afe9fdf863f"
    },
    {
      "name": "UserBookingList",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "b21f2a1f-988b-444d-b6b1-d585bf573e3e",
            "exec": [
              "",
              "var rideresponse = pm.response.json();",
              "pm.test(\"Status code is 200\", function () {",
              "     console.log('req', request)",
              "     console.log('res', responseBody)",
              "     pm.response.to.have.status(200);",
              "})",
              "",
              "if (rideresponse.list[0].rideList[0].hasOwnProperty('rideOtp'))",
              "{",
              "    pm.environment.set(\"otpcheck\", rideresponse.list[0].rideList[0].rideOtp);",
              "    console.log(pm.environment.get(\"otpcheck\"))",
              "",
              "}",
              "",
              "else",
              "{",
              "",
              "    console.error(\"notvalidated\",rideresponse );",
              "}",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "id": "b8d34e60-ef05-462c-bdf9-a3ddc61c50b7",
            "exec": [
              "setTimeout(function(){},1500)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "56854b69-0447-4ad2-b9bf-6b0d6c108df4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{curr_user_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl_app}}/rideBooking/list",
          "host": [
            "{{baseUrl_app}}"
          ],
          "path": [
            "rideBooking",
            "list"
          ],
          "query": [
            {
              "key": "day",
              "value": "2023-10-04",
              "disabled": true
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-56854b69-0447-4ad2-b9bf-6b0d6c108df4"
    },
    {
      "name": "startRide",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "1d3462a1-13ae-4cac-a255-e179897347f6",
            "exec": [
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "030b7d13-b5a2-4e4c-8b6b-9aae1b317d3d",
            "exec": [
              "var responseBody = pm.response.json()",
              "pm.test(\"Status code is 200\", function () {",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "de83086e-01a2-4be3-8425-d46863b0d7a4",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"rideOtp\": \"{{otpcheck}}\",\n    \"point\": {\n       \"lat\":12.975552754483981,\n            \"lon\": 77.60668837287854\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/start",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            ":rideId",
            "start"
          ],
          "variable": [
            {
              "key": "rideId",
              "value": "{{DriverRide_id}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-de83086e-01a2-4be3-8425-d46863b0d7a4"
    },
    {
      "name": "EndRide",
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "4726fd4e-16cc-40c2-9ace-addfbee13356",
            "exec": [
              "setTimeout(function(){},1000)"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "6e538356-6388-4ec9-8c56-0dd10e7f537b",
            "exec": [
              "var responseBody = pm.response.json()",
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "    console.log('req', request)",
              "     console.log('res', responseBody)",
              "});",
              "",
              "",
              "",
              "pm.test(\"Result - Successful\", function() {",
              "    pm.expect(responseBody.result).to.be.equal(\"Success\")",
              "})",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "id": "fe37d7e8-f302-46d1-9163-2ecb6b65d88f",
      "protocolProfileBehavior": {
        "disableBodyPruning": true
      },
      "request": {
        "auth": {
          "type": "apikey",
          "apikey": [
            {
              "key": "value",
              "value": "{{rider_token}}",
              "type": "string"
            },
            {
              "key": "key",
              "value": "token",
              "type": "string"
            },
            {
              "key": "in",
              "value": "header",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"point\": {\n        \"lat\": 12.927067614891168,\n        \"lon\": 77.59043525962878\n    }\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{baseURL_namma_P}}/driver/ride/:rideId/end",
          "host": [
            "{{baseURL_namma_P}}"
          ],
          "path": [
            "driver",
            "ride",
            ":rideId",
            "end"
          ],
          "variable": [
            {
              "key": "rideId",
              "value": "{{DriverRide_id}}"
            }
          ]
        }
      },
      "response": [],
      "uid": "38579165-fe37d7e8-f302-46d1-9163-2ecb6b65d88f"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "d6f2777a-c34c-42c9-b2ac-ac7d33934a73",
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "ea741b43-d74c-41c9-aa78-c1f86688f0d6",
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "driver_number",
      "value": ""
    },
    {
      "key": "user_number",
      "value": ""
    },
    {
      "key": "retryCount",
      "value": ""
    },
    {
      "key": "curr_rider_authId",
      "value": ""
    },
    {
      "key": "rider_token",
      "value": ""
    },
    {
      "key": "driver_id",
      "value": ""
    },
    {
      "key": "user_authIdId",
      "value": ""
    },
    {
      "key": "curr_user_token",
      "value": ""
    },
    {
      "key": "curr_searchId",
      "value": ""
    },
    {
      "key": "taxiEstimateId",
      "value": ""
    },
    {
      "key": "autoEstimateId",
      "value": ""
    },
    {
      "key": "sedanEstimateId",
      "value": ""
    },
    {
      "key": "suvEstimateId",
      "value": ""
    },
    {
      "key": "searchReq_Id",
      "value": ""
    },
    {
      "key": "DriverRide_id",
      "value": ""
    }
  ]
}